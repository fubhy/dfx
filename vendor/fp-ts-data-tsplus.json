{
  "@fp-ts/data/Random": [
    {
      "definitionName": "PCGRandom",
      "definitionKind": "class",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Random.PCGRandom"
        }
      ]
    },
    {
      "definitionName": "PCGRandomState",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Random.PCGRandomState"
        }
      ]
    },
    {
      "definitionName": "OptionalNumber",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Random.OptionalNumber"
        }
      ]
    }
  ],
  "@fp-ts/data/typeclass/Gen": [
    {
      "definitionName": "GenKindImpl",
      "definitionKind": "class",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/typeclass/Gen.KindImpl"
        }
      ]
    },
    {
      "definitionName": "SingleShotGen",
      "definitionKind": "class",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/typeclass/Gen.SingleShotGen"
        }
      ]
    },
    {
      "definitionName": "GenKind",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/typeclass/Gen.Kind"
        }
      ]
    },
    {
      "definitionName": "Variance",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/typeclass/Gen.Variance"
        }
      ]
    },
    {
      "definitionName": "Gen",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/typeclass/Gen"
        }
      ]
    },
    {
      "definitionName": "Adapter",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/typeclass/Gen.Adapter"
        }
      ]
    },
    {
      "definitionName": "GenKindTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/typeclass/Gen.KindTypeId"
        }
      ]
    }
  ],
  "@fp-ts/data/Function": [
    {
      "definitionName": "FunctionTypeLambda",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Function.TypeLambda"
        }
      ]
    },
    {
      "definitionName": "LazyArg",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Function.LazyArg"
        }
      ]
    },
    {
      "definitionName": "FunctionN",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Function.N"
        }
      ]
    }
  ],
  "@fp-ts/data/Equal": [
    {
      "definitionName": "Equal",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Equal"
        }
      ]
    }
  ],
  "@fp-ts/data/typeclass/Compactable": [
    {
      "definitionName": "Compactable",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/typeclass/Compactable"
        }
      ]
    }
  ],
  "@fp-ts/data/typeclass/Filterable": [
    {
      "definitionName": "Filterable",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/typeclass/Filterable"
        }
      ]
    }
  ],
  "@fp-ts/data/Option": [
    {
      "definitionName": "OptionTypeLambda",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Option.TypeLambda"
        }
      ]
    },
    {
      "definitionName": "None",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Option.None"
        }
      ]
    },
    {
      "definitionName": "Some",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Option.Some"
        }
      ]
    },
    {
      "definitionName": "Option",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Option"
        }
      ]
    },
    {
      "definitionName": "getOrThrow",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "getOrThrow"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "imap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "imap"
        }
      ]
    },
    {
      "definitionName": "bindTo",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "bindTo"
        }
      ]
    },
    {
      "definitionName": "flap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "flap"
        }
      ]
    },
    {
      "definitionName": "as",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "as"
        }
      ]
    },
    {
      "definitionName": "flatMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "flatMap"
        }
      ]
    },
    {
      "definitionName": "andThen",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "andThen"
        }
      ]
    },
    {
      "definitionName": "bind",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "bind"
        }
      ]
    },
    {
      "definitionName": "tap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "tap"
        }
      ]
    },
    {
      "definitionName": "inspectSome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "inspectSome"
        }
      ]
    },
    {
      "definitionName": "inspectNone",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "inspectNone"
        }
      ]
    },
    {
      "definitionName": "andThenDiscard",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "andThenDiscard"
        }
      ]
    },
    {
      "definitionName": "product",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "product"
        }
      ]
    },
    {
      "definitionName": "productMany",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "productMany"
        }
      ]
    },
    {
      "definitionName": "andThenBind",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "andThenBind"
        }
      ]
    },
    {
      "definitionName": "productFlatten",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "productFlatten"
        }
      ]
    },
    {
      "definitionName": "ap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "ap"
        }
      ]
    },
    {
      "definitionName": "coproduct",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "coproduct"
        }
      ]
    },
    {
      "definitionName": "firstSomeOf",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "firstSomeOf"
        }
      ]
    },
    {
      "definitionName": "coproductEither",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "coproductEither"
        }
      ]
    },
    {
      "definitionName": "filterMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "filterMap"
        }
      ]
    },
    {
      "definitionName": "filter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "filter"
        }
      ]
    },
    {
      "definitionName": "sequence",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "sequence"
        }
      ]
    },
    {
      "definitionName": "toEither",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "toEither"
        }
      ]
    },
    {
      "definitionName": "match",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "match"
        }
      ]
    },
    {
      "definitionName": "getOrElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "getOrElse"
        }
      ]
    },
    {
      "definitionName": "flatMapNullable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "flatMapNullable"
        }
      ]
    },
    {
      "definitionName": "catchAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "catchAll"
        }
      ]
    },
    {
      "definitionName": "orElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "orElse"
        }
      ]
    },
    {
      "definitionName": "orElseEither",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "orElseEither"
        }
      ]
    },
    {
      "definitionName": "orElseSucceed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "orElseSucceed"
        }
      ]
    },
    {
      "definitionName": "flatMapEither",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "flatMapEither"
        }
      ]
    },
    {
      "definitionName": "elem",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "elem"
        }
      ]
    },
    {
      "definitionName": "exists",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "exists"
        }
      ]
    },
    {
      "definitionName": "tupled",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Option",
          "name": "tupled"
        }
      ]
    },
    {
      "definitionName": "asUnit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Option",
          "name": "asUnit"
        }
      ]
    },
    {
      "definitionName": "flatten",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Option",
          "name": "flatten"
        }
      ]
    },
    {
      "definitionName": "compact",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Option",
          "name": "compact"
        }
      ]
    },
    {
      "definitionName": "separate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Option",
          "name": "separate"
        }
      ]
    },
    {
      "definitionName": "isNone",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Option",
          "name": "isNone"
        }
      ]
    },
    {
      "definitionName": "isSome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Option",
          "name": "isSome"
        }
      ]
    },
    {
      "definitionName": "getOrNull",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Option",
          "name": "getOrNull"
        }
      ]
    },
    {
      "definitionName": "getOrUndefined",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Option",
          "name": "getOrUndefined"
        }
      ]
    }
  ],
  "@fp-ts/data/Either": [
    {
      "definitionName": "EitherTypeLambda",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Either.TypeLambda"
        }
      ]
    },
    {
      "definitionName": "Left",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Either.Left"
        }
      ]
    },
    {
      "definitionName": "Right",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Either.Right"
        }
      ]
    },
    {
      "definitionName": "Either",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Either"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "imap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "imap"
        }
      ]
    },
    {
      "definitionName": "bindTo",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "bindTo"
        }
      ]
    },
    {
      "definitionName": "flap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "flap"
        }
      ]
    },
    {
      "definitionName": "as",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "as"
        }
      ]
    },
    {
      "definitionName": "bimap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "bimap"
        }
      ]
    },
    {
      "definitionName": "mapLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "mapLeft"
        }
      ]
    },
    {
      "definitionName": "flatMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "flatMap"
        }
      ]
    },
    {
      "definitionName": "andThen",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "andThen"
        }
      ]
    },
    {
      "definitionName": "bind",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "bind"
        }
      ]
    },
    {
      "definitionName": "andThenDiscard",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "andThenDiscard"
        }
      ]
    },
    {
      "definitionName": "product",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "product"
        }
      ]
    },
    {
      "definitionName": "productMany",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "productMany"
        }
      ]
    },
    {
      "definitionName": "andThenBind",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "andThenBind"
        }
      ]
    },
    {
      "definitionName": "productFlatten",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "productFlatten"
        }
      ]
    },
    {
      "definitionName": "ap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "ap"
        }
      ]
    },
    {
      "definitionName": "firstSuccessOf",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "firstSuccessOf"
        }
      ]
    },
    {
      "definitionName": "getOrElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "getOrElse"
        }
      ]
    },
    {
      "definitionName": "catchAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "catchAll"
        }
      ]
    },
    {
      "definitionName": "orElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "orElse"
        }
      ]
    },
    {
      "definitionName": "orElseEither",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "orElseEither"
        }
      ]
    },
    {
      "definitionName": "orElseFail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "orElseFail"
        }
      ]
    },
    {
      "definitionName": "orElseSucceed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "orElseSucceed"
        }
      ]
    },
    {
      "definitionName": "match",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "match"
        }
      ]
    },
    {
      "definitionName": "flatMapNullable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "flatMapNullable"
        }
      ]
    },
    {
      "definitionName": "getOrThrow",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "getOrThrow"
        }
      ]
    },
    {
      "definitionName": "compact",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "compact"
        }
      ]
    },
    {
      "definitionName": "filter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "filter"
        }
      ]
    },
    {
      "definitionName": "filterMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "filterMap"
        }
      ]
    },
    {
      "definitionName": "sequence",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "sequence"
        }
      ]
    },
    {
      "definitionName": "tap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "tap"
        }
      ]
    },
    {
      "definitionName": "inspectRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "inspectRight"
        }
      ]
    },
    {
      "definitionName": "tapError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "tapError"
        }
      ]
    },
    {
      "definitionName": "inspectLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "inspectLeft"
        }
      ]
    },
    {
      "definitionName": "flatMapOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "flatMapOption"
        }
      ]
    },
    {
      "definitionName": "elem",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "elem"
        }
      ]
    },
    {
      "definitionName": "exists",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Either",
          "name": "exists"
        }
      ]
    },
    {
      "definitionName": "isLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Either",
          "name": "isLeft"
        }
      ]
    },
    {
      "definitionName": "isRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Either",
          "name": "isRight"
        }
      ]
    },
    {
      "definitionName": "tupled",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Either",
          "name": "tupled"
        }
      ]
    },
    {
      "definitionName": "asUnit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Either",
          "name": "asUnit"
        }
      ]
    },
    {
      "definitionName": "flatten",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Either",
          "name": "flatten"
        }
      ]
    },
    {
      "definitionName": "merge",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Either",
          "name": "merge"
        }
      ]
    },
    {
      "definitionName": "reverse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Either",
          "name": "reverse"
        }
      ]
    },
    {
      "definitionName": "getLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Either",
          "name": "getLeft"
        }
      ]
    },
    {
      "definitionName": "getRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Either",
          "name": "getRight"
        }
      ]
    },
    {
      "definitionName": "getOrNull",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Either",
          "name": "getOrNull"
        }
      ]
    },
    {
      "definitionName": "getOrUndefined",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Either",
          "name": "getOrUndefined"
        }
      ]
    }
  ],
  "@fp-ts/data/typeclass/TraversableFilterable": [
    {
      "definitionName": "TraversableFilterable",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/typeclass/TraversableFilterable"
        }
      ]
    }
  ],
  "@fp-ts/data/ReadonlyArray": [
    {
      "definitionName": "ReadonlyArrayTypeLambda",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/ReadonlyArray.TypeLambda"
        }
      ]
    },
    {
      "definitionName": "NonEmptyReadonlyArray",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/ReadonlyArray.NonEmptyReadonlyArray"
        }
      ]
    },
    {
      "definitionName": "NonEmptyArray",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/ReadonlyArray.NonEmptyArray"
        }
      ]
    },
    {
      "definitionName": "match",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "match"
        }
      ]
    },
    {
      "definitionName": "matchRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "matchRight"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "unsafeGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "unsafeGet"
        }
      ]
    },
    {
      "definitionName": "union",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "union"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "mapWithIndex"
        }
      ]
    },
    {
      "definitionName": "imap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "imap"
        }
      ]
    },
    {
      "definitionName": "flap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "flap"
        }
      ]
    },
    {
      "definitionName": "as",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "as"
        }
      ]
    },
    {
      "definitionName": "flatMapWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "flatMapWithIndex"
        }
      ]
    },
    {
      "definitionName": "flatMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "flatMap"
        }
      ]
    },
    {
      "definitionName": "bind",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "bind"
        }
      ]
    },
    {
      "definitionName": "filter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "filter"
        }
      ]
    },
    {
      "definitionName": "filterWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "filterWithIndex"
        }
      ]
    },
    {
      "definitionName": "partition",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "partition"
        }
      ]
    },
    {
      "definitionName": "partitionWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "partitionWithIndex"
        }
      ]
    },
    {
      "definitionName": "partitionMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "partitionMap"
        }
      ]
    },
    {
      "definitionName": "partitionMapWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "partitionMapWithIndex"
        }
      ]
    },
    {
      "definitionName": "sequence",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "sequence"
        }
      ]
    },
    {
      "definitionName": "product",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "product"
        }
      ]
    },
    {
      "definitionName": "productMany",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "productMany"
        }
      ]
    },
    {
      "definitionName": "andThenBind",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "andThenBind"
        }
      ]
    },
    {
      "definitionName": "ap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "ap"
        }
      ]
    },
    {
      "definitionName": "reduce",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "reduce"
        }
      ]
    },
    {
      "definitionName": "reduceWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "reduceWithIndex"
        }
      ]
    },
    {
      "definitionName": "reduceRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "reduceRight"
        }
      ]
    },
    {
      "definitionName": "reduceRightWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "reduceRightWithIndex"
        }
      ]
    },
    {
      "definitionName": "flatMapNullable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "flatMapNullable"
        }
      ]
    },
    {
      "definitionName": "some",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "some"
        }
      ]
    },
    {
      "definitionName": "has",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "has"
        }
      ]
    },
    {
      "definitionName": "join",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "join"
        }
      ]
    },
    {
      "definitionName": "productFlatten",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "productFlatten"
        }
      ]
    },
    {
      "definitionName": "extend",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "extend"
        }
      ]
    },
    {
      "definitionName": "unionNonEmpty",
      "definitionKind": "function",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "unionNonEmpty"
        }
      ]
    },
    {
      "definitionName": "isEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "ReadonlyArray",
          "name": "isEmpty"
        }
      ]
    },
    {
      "definitionName": "isNonEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "ReadonlyArray",
          "name": "isNonEmpty"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "ReadonlyArray",
          "name": "size"
        }
      ]
    },
    {
      "definitionName": "head",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "ReadonlyArray",
          "name": "head"
        }
      ]
    },
    {
      "definitionName": "last",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "ReadonlyArray",
          "name": "last"
        }
      ]
    },
    {
      "definitionName": "flatten",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "ReadonlyArray",
          "name": "flatten"
        }
      ]
    },
    {
      "definitionName": "separate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "ReadonlyArray",
          "name": "separate"
        }
      ]
    },
    {
      "definitionName": "every",
      "definitionKind": "function",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Predicate.Refinement",
          "name": "every"
        }
      ]
    }
  ],
  "@fp-ts/data/Predicate": [
    {
      "definitionName": "Predicate",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Predicate"
        }
      ]
    },
    {
      "definitionName": "PredicateTypeLambda",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Predicate.TypeLambda"
        }
      ]
    },
    {
      "definitionName": "Refinement",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Predicate.Refinement"
        }
      ]
    },
    {
      "definitionName": "compose",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Predicate.Refinement",
          "name": "compose"
        }
      ]
    },
    {
      "definitionName": "contramap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Predicate",
          "name": "contramap"
        }
      ]
    },
    {
      "definitionName": "imap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Predicate",
          "name": "imap"
        }
      ]
    },
    {
      "definitionName": "bindTo",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Predicate",
          "name": "bindTo"
        }
      ]
    },
    {
      "definitionName": "product",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Predicate",
          "name": "product"
        }
      ]
    },
    {
      "definitionName": "productMany",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Predicate",
          "name": "productMany"
        }
      ]
    },
    {
      "definitionName": "productAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "ReadonlyArray",
          "name": "productAll"
        }
      ]
    },
    {
      "definitionName": "andThenBind",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Predicate",
          "name": "andThenBind"
        }
      ]
    },
    {
      "definitionName": "or",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Predicate",
          "name": "or"
        }
      ]
    },
    {
      "definitionName": "and",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Predicate",
          "name": "and"
        }
      ]
    },
    {
      "definitionName": "tupled",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Predicate",
          "name": "tupled"
        }
      ]
    },
    {
      "definitionName": "not",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Predicate",
          "name": "not"
        }
      ]
    }
  ],
  "@fp-ts/data/MutableRef": [
    {
      "definitionName": "MutableRef",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/MutableRef"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/MutableRef.TypeId"
        }
      ]
    },
    {
      "definitionName": "set",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableRef",
          "name": "set"
        }
      ]
    },
    {
      "definitionName": "update",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableRef",
          "name": "update"
        }
      ]
    },
    {
      "definitionName": "updateAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableRef",
          "name": "updateAndGet"
        }
      ]
    },
    {
      "definitionName": "getAndUpdate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableRef",
          "name": "getAndUpdate"
        }
      ]
    },
    {
      "definitionName": "setAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableRef",
          "name": "setAndGet"
        }
      ]
    },
    {
      "definitionName": "getAndSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableRef",
          "name": "getAndSet"
        }
      ]
    },
    {
      "definitionName": "compareAndSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableRef",
          "name": "compareAndSet"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableRef",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "incrementAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableRef",
          "name": "incrementAndGet"
        }
      ]
    },
    {
      "definitionName": "getAndIncrement",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableRef",
          "name": "getAndIncrement"
        }
      ]
    },
    {
      "definitionName": "increment",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableRef",
          "name": "increment"
        }
      ]
    },
    {
      "definitionName": "decrementAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableRef",
          "name": "decrementAndGet"
        }
      ]
    },
    {
      "definitionName": "getAndDecrement",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableRef",
          "name": "getAndDecrement"
        }
      ]
    },
    {
      "definitionName": "decrement",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableRef",
          "name": "decrement"
        }
      ]
    },
    {
      "definitionName": "toggle",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableRef",
          "name": "toggle"
        }
      ]
    }
  ],
  "@fp-ts/data/NonEmpty": [
    {
      "definitionName": "NonEmptyIterable",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/NonEmpty.Iterable"
        }
      ]
    },
    {
      "definitionName": "unprepend",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/NonEmpty.Iterable",
          "name": "unprepend"
        }
      ]
    }
  ],
  "@fp-ts/data/Chunk": [
    {
      "definitionName": "NonEmptyChunk",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Chunk.NonEmptyChunk"
        }
      ]
    },
    {
      "definitionName": "Chunk",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Chunk"
        }
      ]
    },
    {
      "definitionName": "ChunkTypeLambda",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Chunk.TypeLambda"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Chunk.TypeId"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "unsafeGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "unsafeGet"
        }
      ]
    },
    {
      "definitionName": "append",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "append"
        },
        {
          "typeName": "fp-ts/data/Chunk",
          "kind": "pipeable-operator",
          "name": "<<"
        }
      ]
    },
    {
      "definitionName": "prepend",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "prepend"
        },
        {
          "typeName": "fp-ts/data/Chunk",
          "kind": "pipeable-operator",
          "name": ">>"
        }
      ]
    },
    {
      "definitionName": "take",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "take"
        }
      ]
    },
    {
      "definitionName": "drop",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "drop"
        }
      ]
    },
    {
      "definitionName": "dropRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "dropRight"
        }
      ]
    },
    {
      "definitionName": "dropWhile",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "dropWhile"
        }
      ]
    },
    {
      "definitionName": "concat",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "concat"
        },
        {
          "typeName": "fp-ts/data/Chunk",
          "kind": "pipeable-operator",
          "name": "+"
        }
      ]
    },
    {
      "definitionName": "correspondsTo",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "correspondsTo"
        }
      ]
    },
    {
      "definitionName": "filter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "filter"
        }
      ]
    },
    {
      "definitionName": "elem",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "elem"
        }
      ]
    },
    {
      "definitionName": "some",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "some"
        }
      ]
    },
    {
      "definitionName": "every",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "every"
        }
      ]
    },
    {
      "definitionName": "findFirstIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "findFirstIndex"
        }
      ]
    },
    {
      "definitionName": "findLastIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "findLastIndex"
        }
      ]
    },
    {
      "definitionName": "flatMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "flatMap"
        }
      ]
    },
    {
      "definitionName": "forEach",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "forEach"
        }
      ]
    },
    {
      "definitionName": "chunksOf",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "chunksOf"
        }
      ]
    },
    {
      "definitionName": "intersection",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "intersection"
        }
      ]
    },
    {
      "definitionName": "reduce",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "reduce"
        }
      ]
    },
    {
      "definitionName": "reduceWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "reduceWithIndex"
        }
      ]
    },
    {
      "definitionName": "reduceRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "reduceRight"
        }
      ]
    },
    {
      "definitionName": "reduceRightWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "reduceRightWithIndex"
        }
      ]
    },
    {
      "definitionName": "join",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "join"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "mapWithIndex"
        }
      ]
    },
    {
      "definitionName": "partitionWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "partitionWithIndex"
        }
      ]
    },
    {
      "definitionName": "partition",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "partition"
        }
      ]
    },
    {
      "definitionName": "partitionMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "partitionMap"
        }
      ]
    },
    {
      "definitionName": "sort",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "sort"
        }
      ]
    },
    {
      "definitionName": "splitAt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "splitAt"
        }
      ]
    },
    {
      "definitionName": "split",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "split"
        }
      ]
    },
    {
      "definitionName": "splitWhere",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "splitWhere"
        }
      ]
    },
    {
      "definitionName": "takeRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "takeRight"
        }
      ]
    },
    {
      "definitionName": "takeWhile",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "takeWhile"
        }
      ]
    },
    {
      "definitionName": "zip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "zip"
        }
      ]
    },
    {
      "definitionName": "zipWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "zipWith"
        }
      ]
    },
    {
      "definitionName": "zipAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "zipAll"
        }
      ]
    },
    {
      "definitionName": "zipAllWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "zipAllWith"
        }
      ]
    },
    {
      "definitionName": "crossWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "crossWith"
        }
      ]
    },
    {
      "definitionName": "cross",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "cross"
        }
      ]
    },
    {
      "definitionName": "zipWithIndexOffset",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "zipWithIndexOffset"
        }
      ]
    },
    {
      "definitionName": "remove",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "remove"
        }
      ]
    },
    {
      "definitionName": "replace",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "replace"
        }
      ]
    },
    {
      "definitionName": "replaceOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "replaceOption"
        }
      ]
    },
    {
      "definitionName": "modify",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "modify"
        }
      ]
    },
    {
      "definitionName": "modifyOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "modifyOption"
        }
      ]
    },
    {
      "definitionName": "prependAllNonEmpty",
      "definitionKind": "function",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "prependAllNonEmpty"
        }
      ]
    },
    {
      "definitionName": "findFirst",
      "definitionKind": "function",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "findFirst"
        }
      ]
    },
    {
      "definitionName": "findLast",
      "definitionKind": "function",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "findLast"
        }
      ]
    },
    {
      "definitionName": "mapAccum",
      "definitionKind": "function",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "mapAccum"
        }
      ]
    },
    {
      "definitionName": "union",
      "definitionKind": "function",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Chunk",
          "name": "union"
        }
      ]
    },
    {
      "definitionName": "toReadonlyArray",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Chunk",
          "name": "toReadonlyArray"
        }
      ]
    },
    {
      "definitionName": "dedupeAdjacent",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Chunk",
          "name": "dedupeAdjacent"
        }
      ]
    },
    {
      "definitionName": "flatten",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Chunk",
          "name": "flatten"
        }
      ]
    },
    {
      "definitionName": "head",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Chunk",
          "name": "head"
        }
      ]
    },
    {
      "definitionName": "isEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Chunk",
          "name": "isEmpty"
        }
      ]
    },
    {
      "definitionName": "isNonEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Chunk",
          "name": "isNonEmpty"
        }
      ]
    },
    {
      "definitionName": "last",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Chunk",
          "name": "last"
        }
      ]
    },
    {
      "definitionName": "separate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Chunk",
          "name": "separate"
        }
      ]
    },
    {
      "definitionName": "reverse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Chunk",
          "name": "reverse"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Chunk",
          "name": "size"
        }
      ]
    },
    {
      "definitionName": "tail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Chunk",
          "name": "tail"
        }
      ]
    },
    {
      "definitionName": "dedupe",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Chunk",
          "name": "dedupe"
        }
      ]
    },
    {
      "definitionName": "unsafeHead",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Chunk",
          "name": "unsafeHead"
        }
      ]
    },
    {
      "definitionName": "unsafeLast",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Chunk",
          "name": "unsafeLast"
        }
      ]
    },
    {
      "definitionName": "unzip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Chunk",
          "name": "unzip"
        }
      ]
    },
    {
      "definitionName": "zipWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Chunk",
          "name": "zipWithIndex"
        }
      ]
    },
    {
      "definitionName": "headNonEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Chunk.NonEmptyChunk",
          "name": "headNonEmpty"
        }
      ]
    },
    {
      "definitionName": "tailNonEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Chunk.NonEmptyChunk",
          "name": "tailNonEmpty"
        }
      ]
    }
  ],
  "@fp-ts/data/Context": [
    {
      "definitionName": "Tag",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Context.Tag"
        }
      ]
    },
    {
      "definitionName": "Context",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Context"
        }
      ]
    },
    {
      "definitionName": "TagTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Context.TagTypeId"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Context.TypeId"
        }
      ]
    },
    {
      "definitionName": "Tags",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Context.Tags"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Context",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "unsafeGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Context",
          "name": "unsafeGet"
        }
      ]
    },
    {
      "definitionName": "getOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Context",
          "name": "getOption"
        }
      ]
    },
    {
      "definitionName": "merge",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Context",
          "name": "merge"
        }
      ]
    },
    {
      "definitionName": "prune",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Context",
          "name": "prune"
        }
      ]
    }
  ],
  "@fp-ts/data/Differ/ChunkPatch": [
    {
      "definitionName": "ChunkPatch",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Differ/ChunkPatch"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Differ/ChunkPatch.TypeId"
        }
      ]
    },
    {
      "definitionName": "combine",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Differ/ChunkPatch",
          "name": "combine"
        }
      ]
    },
    {
      "definitionName": "patch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Differ/ChunkPatch",
          "name": "patch"
        }
      ]
    }
  ],
  "@fp-ts/data/Differ/ContextPatch": [
    {
      "definitionName": "ContextPatch",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Differ/ContextPatch"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Differ/ContextPatch.TypeId"
        }
      ]
    },
    {
      "definitionName": "combine",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Differ/ContextPatch",
          "name": "combine"
        }
      ]
    },
    {
      "definitionName": "patch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Differ/ContextPatch",
          "name": "patch"
        }
      ]
    }
  ],
  "@fp-ts/data/HashSet": [
    {
      "definitionName": "HashSet",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/HashSet"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/HashSet.TypeId"
        }
      ]
    },
    {
      "definitionName": "has",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashSet",
          "name": "has"
        }
      ]
    },
    {
      "definitionName": "some",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashSet",
          "name": "some"
        }
      ]
    },
    {
      "definitionName": "every",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashSet",
          "name": "every"
        }
      ]
    },
    {
      "definitionName": "isSubset",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashSet",
          "name": "isSubset"
        }
      ]
    },
    {
      "definitionName": "mutate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashSet",
          "name": "mutate"
        }
      ]
    },
    {
      "definitionName": "add",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashSet",
          "name": "add"
        }
      ]
    },
    {
      "definitionName": "remove",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashSet",
          "name": "remove"
        }
      ]
    },
    {
      "definitionName": "difference",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashSet",
          "name": "difference"
        }
      ]
    },
    {
      "definitionName": "intersection",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashSet",
          "name": "intersection"
        }
      ]
    },
    {
      "definitionName": "union",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashSet",
          "name": "union"
        }
      ]
    },
    {
      "definitionName": "toggle",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashSet",
          "name": "toggle"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashSet",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "flatMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashSet",
          "name": "flatMap"
        }
      ]
    },
    {
      "definitionName": "forEach",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashSet",
          "name": "forEach"
        }
      ]
    },
    {
      "definitionName": "reduce",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashSet",
          "name": "reduce"
        }
      ]
    },
    {
      "definitionName": "filter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashSet",
          "name": "filter"
        }
      ]
    },
    {
      "definitionName": "partition",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashSet",
          "name": "partition"
        }
      ]
    },
    {
      "definitionName": "values",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/HashSet",
          "name": "values"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/HashSet",
          "name": "size"
        }
      ]
    },
    {
      "definitionName": "beginMutation",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/HashSet",
          "name": "beginMutation"
        }
      ]
    },
    {
      "definitionName": "endMutation",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/HashSet",
          "name": "endMutation"
        }
      ]
    }
  ],
  "@fp-ts/data/HashMap": [
    {
      "definitionName": "HashMap",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/HashMap"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/HashMap.TypeId"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "getHash",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "getHash"
        }
      ]
    },
    {
      "definitionName": "unsafeGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "unsafeGet"
        }
      ]
    },
    {
      "definitionName": "has",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "has"
        }
      ]
    },
    {
      "definitionName": "hasHash",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "hasHash"
        }
      ]
    },
    {
      "definitionName": "set",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "set"
        }
      ]
    },
    {
      "definitionName": "mutate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "mutate"
        }
      ]
    },
    {
      "definitionName": "modifyAt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "modifyAt"
        }
      ]
    },
    {
      "definitionName": "modifyHash",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "modifyHash"
        }
      ]
    },
    {
      "definitionName": "modify",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "modify"
        }
      ]
    },
    {
      "definitionName": "union",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "union"
        }
      ]
    },
    {
      "definitionName": "remove",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "remove"
        }
      ]
    },
    {
      "definitionName": "removeMany",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "removeMany"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "mapWithIndex"
        }
      ]
    },
    {
      "definitionName": "flatMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "flatMap"
        }
      ]
    },
    {
      "definitionName": "flatMapWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "flatMapWithIndex"
        }
      ]
    },
    {
      "definitionName": "forEach",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "forEach"
        }
      ]
    },
    {
      "definitionName": "forEachWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "forEachWithIndex"
        }
      ]
    },
    {
      "definitionName": "reduce",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "reduce"
        }
      ]
    },
    {
      "definitionName": "reduceWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "reduceWithIndex"
        }
      ]
    },
    {
      "definitionName": "filter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "filter"
        }
      ]
    },
    {
      "definitionName": "filterWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "filterWithIndex"
        }
      ]
    },
    {
      "definitionName": "filterMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "filterMap"
        }
      ]
    },
    {
      "definitionName": "filterMapWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/HashMap",
          "name": "filterMapWithIndex"
        }
      ]
    },
    {
      "definitionName": "isEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/HashMap",
          "name": "isEmpty"
        }
      ]
    },
    {
      "definitionName": "keys",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/HashMap",
          "name": "keys"
        }
      ]
    },
    {
      "definitionName": "keySet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/HashMap",
          "name": "keySet"
        }
      ]
    },
    {
      "definitionName": "values",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/HashMap",
          "name": "values"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/HashMap",
          "name": "size"
        }
      ]
    },
    {
      "definitionName": "beginMutation",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/HashMap",
          "name": "beginMutation"
        }
      ]
    },
    {
      "definitionName": "endMutation",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/HashMap",
          "name": "endMutation"
        }
      ]
    },
    {
      "definitionName": "compact",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/HashMap",
          "name": "compact"
        }
      ]
    }
  ],
  "@fp-ts/data/Differ/HashMapPatch": [
    {
      "definitionName": "HashMapPatch",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Differ/HashMapPatch"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Differ/HashMapPatch.TypeId"
        }
      ]
    },
    {
      "definitionName": "combine",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Differ/HashMapPatch",
          "name": "combine"
        }
      ]
    },
    {
      "definitionName": "patch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Differ/HashMapPatch",
          "name": "patch"
        }
      ]
    }
  ],
  "@fp-ts/data/Differ/HashSetPatch": [
    {
      "definitionName": "HashSetPatch",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Differ/HashSetPatch"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Differ/HashSetPatch.TypeId"
        }
      ]
    },
    {
      "definitionName": "combine",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Differ/HashSetPatch",
          "name": "combine"
        }
      ]
    },
    {
      "definitionName": "patch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Differ/HashSetPatch",
          "name": "patch"
        }
      ]
    }
  ],
  "@fp-ts/data/Differ/OrPatch": [
    {
      "definitionName": "OrPatch",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Differ/OrPatch"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Differ/OrPatch.TypeId"
        }
      ]
    },
    {
      "definitionName": "combine",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Differ/OrPatch",
          "name": "combine"
        }
      ]
    },
    {
      "definitionName": "patch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Differ/OrPatch",
          "name": "patch"
        }
      ]
    }
  ],
  "@fp-ts/data/Differ": [
    {
      "definitionName": "Differ",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Differ"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Differ.TypeId"
        }
      ]
    },
    {
      "definitionName": "diff",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Differ",
          "name": "diff"
        }
      ]
    },
    {
      "definitionName": "combine",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Differ",
          "name": "combine"
        }
      ]
    },
    {
      "definitionName": "patch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Differ",
          "name": "patch"
        }
      ]
    },
    {
      "definitionName": "orElseResult",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Differ",
          "name": "orElseResult"
        }
      ]
    },
    {
      "definitionName": "transform",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Differ",
          "name": "transform"
        }
      ]
    },
    {
      "definitionName": "zip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Differ",
          "name": "zip"
        }
      ]
    },
    {
      "definitionName": "empty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Differ",
          "name": "empty"
        }
      ]
    },
    {
      "definitionName": "chunk",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Differ",
          "name": "chunk"
        }
      ]
    },
    {
      "definitionName": "hashMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Differ",
          "name": "hashMap"
        }
      ]
    }
  ],
  "@fp-ts/data/Duration": [
    {
      "definitionName": "Duration",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Duration"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Duration.TypeId"
        }
      ]
    },
    {
      "definitionName": "times",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Duration",
          "name": "times"
        },
        {
          "typeName": "fp-ts/data/Duration",
          "kind": "pipeable-operator",
          "name": "*"
        }
      ]
    },
    {
      "definitionName": "add",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Duration",
          "name": "add"
        },
        {
          "typeName": "fp-ts/data/Duration",
          "kind": "pipeable-operator",
          "name": "+"
        }
      ]
    },
    {
      "definitionName": "subtract",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Duration",
          "name": "subtract"
        },
        {
          "typeName": "fp-ts/data/Duration",
          "kind": "pipeable-operator",
          "name": "-"
        }
      ]
    },
    {
      "definitionName": "lessThan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Duration",
          "name": "lessThan"
        },
        {
          "typeName": "fp-ts/data/Duration",
          "kind": "pipeable-operator",
          "name": "<"
        }
      ]
    },
    {
      "definitionName": "lessThanOrEqualTo",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Duration",
          "name": "lessThanOrEqualTo"
        },
        {
          "typeName": "fp-ts/data/Duration",
          "kind": "pipeable-operator",
          "name": "<="
        }
      ]
    },
    {
      "definitionName": "greaterThan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Duration",
          "name": "greaterThan"
        },
        {
          "typeName": "fp-ts/data/Duration",
          "kind": "pipeable-operator",
          "name": ">"
        }
      ]
    },
    {
      "definitionName": "greaterThanOrEqualTo",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Duration",
          "name": "greaterThanOrEqualTo"
        },
        {
          "typeName": "fp-ts/data/Duration",
          "kind": "pipeable-operator",
          "name": ">="
        }
      ]
    },
    {
      "definitionName": "equals",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Duration",
          "name": "equals"
        }
      ]
    }
  ],
  "@fp-ts/data/Identity": [
    {
      "definitionName": "IdentityTypeLambda",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Identity.TypeLambda"
        }
      ]
    },
    {
      "definitionName": "IdentityTypeLambdaFix",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Identity.TypeLambdaFix"
        }
      ]
    },
    {
      "definitionName": "Identity",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Identity"
        }
      ]
    }
  ],
  "@fp-ts/data/MutableHashMap": [
    {
      "definitionName": "MutableHashMap",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/MutableHashMap"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/MutableHashMap.TypeId"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableHashMap",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "has",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableHashMap",
          "name": "has"
        }
      ]
    },
    {
      "definitionName": "modify",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableHashMap",
          "name": "modify"
        }
      ]
    },
    {
      "definitionName": "set",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableHashMap",
          "name": "set"
        }
      ]
    },
    {
      "definitionName": "modifyAt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableHashMap",
          "name": "modifyAt"
        }
      ]
    },
    {
      "definitionName": "remove",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableHashMap",
          "name": "remove"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableHashMap",
          "name": "size"
        }
      ]
    }
  ],
  "@fp-ts/data/MutableHashSet": [
    {
      "definitionName": "MutableHashSet",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/MutableHashSet"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/MutableHashSet.TypeId"
        }
      ]
    },
    {
      "definitionName": "has",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableHashSet",
          "name": "has"
        }
      ]
    },
    {
      "definitionName": "add",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableHashSet",
          "name": "add"
        }
      ]
    },
    {
      "definitionName": "remove",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableHashSet",
          "name": "remove"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableHashSet",
          "name": "size"
        }
      ]
    }
  ],
  "@fp-ts/data/MutableList": [
    {
      "definitionName": "MutableList",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/MutableList"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/MutableList.TypeId"
        }
      ]
    },
    {
      "definitionName": "forEach",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableList",
          "name": "forEach"
        }
      ]
    },
    {
      "definitionName": "append",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableList",
          "name": "append"
        }
      ]
    },
    {
      "definitionName": "isEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableList",
          "name": "isEmpty"
        }
      ]
    },
    {
      "definitionName": "length",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableList",
          "name": "length"
        }
      ]
    },
    {
      "definitionName": "tail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableList",
          "name": "tail"
        }
      ]
    },
    {
      "definitionName": "head",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableList",
          "name": "head"
        }
      ]
    },
    {
      "definitionName": "reset",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableList",
          "name": "reset"
        }
      ]
    },
    {
      "definitionName": "shift",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableList",
          "name": "shift"
        }
      ]
    },
    {
      "definitionName": "pop",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableList",
          "name": "pop"
        }
      ]
    }
  ],
  "@fp-ts/data/MutableQueue": [
    {
      "definitionName": "MutableQueue",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/MutableQueue"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/MutableQueue.TypeId"
        }
      ]
    },
    {
      "definitionName": "offer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableQueue",
          "name": "offer"
        }
      ]
    },
    {
      "definitionName": "offerAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableQueue",
          "name": "offerAll"
        }
      ]
    },
    {
      "definitionName": "poll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableQueue",
          "name": "poll"
        }
      ]
    },
    {
      "definitionName": "pollUpTo",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/MutableQueue",
          "name": "pollUpTo"
        }
      ]
    },
    {
      "definitionName": "length",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableQueue",
          "name": "length"
        }
      ]
    },
    {
      "definitionName": "isEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableQueue",
          "name": "isEmpty"
        }
      ]
    },
    {
      "definitionName": "isFull",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableQueue",
          "name": "isFull"
        }
      ]
    },
    {
      "definitionName": "capacity",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/MutableQueue",
          "name": "capacity"
        }
      ]
    }
  ],
  "@fp-ts/data/RedBlackTree": [
    {
      "definitionName": "RedBlackTree",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/RedBlackTree"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/RedBlackTree.TypeId"
        }
      ]
    },
    {
      "definitionName": "keys",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "keys"
        }
      ]
    },
    {
      "definitionName": "values",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "values"
        }
      ]
    },
    {
      "definitionName": "has",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "has"
        }
      ]
    },
    {
      "definitionName": "getAt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "getAt"
        }
      ]
    },
    {
      "definitionName": "find",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "find"
        }
      ]
    },
    {
      "definitionName": "findFirst",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "findFirst"
        }
      ]
    },
    {
      "definitionName": "insert",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "insert"
        }
      ]
    },
    {
      "definitionName": "removeFirst",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "removeFirst"
        }
      ]
    },
    {
      "definitionName": "at",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "at"
        }
      ]
    },
    {
      "definitionName": "greaterThan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "greaterThan"
        }
      ]
    },
    {
      "definitionName": "greaterThanEqual",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "greaterThanEqual"
        }
      ]
    },
    {
      "definitionName": "lessThan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "lessThan"
        }
      ]
    },
    {
      "definitionName": "lessThanEqual",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "lessThanEqual"
        }
      ]
    },
    {
      "definitionName": "forEach",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "forEach"
        }
      ]
    },
    {
      "definitionName": "forEachGreaterThanEqual",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "forEachGreaterThanEqual"
        }
      ]
    },
    {
      "definitionName": "forEachLessThan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "forEachLessThan"
        }
      ]
    },
    {
      "definitionName": "forEachBetween",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "forEachBetween"
        }
      ]
    },
    {
      "definitionName": "reduce",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "reduce"
        }
      ]
    },
    {
      "definitionName": "reduceWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "reduceWithIndex"
        }
      ]
    },
    {
      "definitionName": "getOrder",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "getOrder"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "size"
        }
      ]
    },
    {
      "definitionName": "first",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "first"
        }
      ]
    },
    {
      "definitionName": "last",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "last"
        }
      ]
    },
    {
      "definitionName": "backwards",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/RedBlackTree",
          "name": "backwards"
        }
      ]
    }
  ],
  "@fp-ts/data/SortedMap": [
    {
      "definitionName": "SortedMap",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/SortedMap"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/SortedMap.TypeId"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedMap",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "set",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedMap",
          "name": "set"
        }
      ]
    },
    {
      "definitionName": "remove",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedMap",
          "name": "remove"
        }
      ]
    },
    {
      "definitionName": "has",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedMap",
          "name": "has"
        }
      ]
    },
    {
      "definitionName": "reduce",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedMap",
          "name": "reduce"
        }
      ]
    },
    {
      "definitionName": "reduceWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedMap",
          "name": "reduceWithIndex"
        }
      ]
    },
    {
      "definitionName": "mapWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedMap",
          "name": "mapWithIndex"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedMap",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "entries",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/SortedMap",
          "name": "entries"
        }
      ]
    },
    {
      "definitionName": "getOrder",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/SortedMap",
          "name": "getOrder"
        }
      ]
    },
    {
      "definitionName": "headOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/SortedMap",
          "name": "headOption"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/SortedMap",
          "name": "size"
        }
      ]
    },
    {
      "definitionName": "isEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/SortedMap",
          "name": "isEmpty"
        }
      ]
    },
    {
      "definitionName": "isNonEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/SortedMap",
          "name": "isNonEmpty"
        }
      ]
    },
    {
      "definitionName": "keys",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/SortedMap",
          "name": "keys"
        }
      ]
    },
    {
      "definitionName": "values",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/SortedMap",
          "name": "values"
        }
      ]
    }
  ],
  "@fp-ts/data/SortedSet": [
    {
      "definitionName": "SortedSet",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/SortedSet"
        }
      ]
    },
    {
      "definitionName": "TypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/SortedSet.TypeId"
        }
      ]
    },
    {
      "definitionName": "add",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedSet",
          "name": "add"
        }
      ]
    },
    {
      "definitionName": "remove",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedSet",
          "name": "remove"
        }
      ]
    },
    {
      "definitionName": "toggle",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedSet",
          "name": "toggle"
        }
      ]
    },
    {
      "definitionName": "has",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedSet",
          "name": "has"
        }
      ]
    },
    {
      "definitionName": "difference",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedSet",
          "name": "difference"
        }
      ]
    },
    {
      "definitionName": "union",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedSet",
          "name": "union"
        }
      ]
    },
    {
      "definitionName": "intersection",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedSet",
          "name": "intersection"
        }
      ]
    },
    {
      "definitionName": "every",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedSet",
          "name": "every"
        }
      ]
    },
    {
      "definitionName": "some",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedSet",
          "name": "some"
        }
      ]
    },
    {
      "definitionName": "forEach",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedSet",
          "name": "forEach"
        }
      ]
    },
    {
      "definitionName": "isSubset",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedSet",
          "name": "isSubset"
        }
      ]
    },
    {
      "definitionName": "filter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedSet",
          "name": "filter"
        }
      ]
    },
    {
      "definitionName": "partition",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/SortedSet",
          "name": "partition"
        }
      ]
    },
    {
      "definitionName": "values",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/SortedSet",
          "name": "values"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/SortedSet",
          "name": "size"
        }
      ]
    }
  ],
  "@fp-ts/data/These": [
    {
      "definitionName": "TheseTypeLambda",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/These.TypeLambda"
        }
      ]
    },
    {
      "definitionName": "ValidatedTypeLambda",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/These.ValidatedTypeLambda"
        }
      ]
    },
    {
      "definitionName": "Both",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/These.Both"
        }
      ]
    },
    {
      "definitionName": "These",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/These"
        }
      ]
    },
    {
      "definitionName": "Validated",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/These.Validated"
        }
      ]
    },
    {
      "definitionName": "leftOrBoth",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "leftOrBoth"
        }
      ]
    },
    {
      "definitionName": "rightOrBoth",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Option",
          "name": "rightOrBoth"
        }
      ]
    },
    {
      "definitionName": "match",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "match"
        }
      ]
    },
    {
      "definitionName": "getOrThrow",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "getOrThrow"
        }
      ]
    },
    {
      "definitionName": "getRightOnlyOrThrow",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "getRightOnlyOrThrow"
        }
      ]
    },
    {
      "definitionName": "toEither",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "toEither"
        }
      ]
    },
    {
      "definitionName": "flatMapNullable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These.Validated",
          "name": "flatMapNullable"
        }
      ]
    },
    {
      "definitionName": "flatMapOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These.Validated",
          "name": "flatMapOption"
        }
      ]
    },
    {
      "definitionName": "flatMapEither",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These.Validated",
          "name": "flatMapEither"
        }
      ]
    },
    {
      "definitionName": "flatMapThese",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These.Validated",
          "name": "flatMapThese"
        }
      ]
    },
    {
      "definitionName": "getBothOrElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "getBothOrElse"
        }
      ]
    },
    {
      "definitionName": "getOrElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "getOrElse"
        }
      ]
    },
    {
      "definitionName": "inspectRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "inspectRight"
        }
      ]
    },
    {
      "definitionName": "inspectRightOrBoth",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "inspectRightOrBoth"
        }
      ]
    },
    {
      "definitionName": "inspectLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "inspectLeft"
        }
      ]
    },
    {
      "definitionName": "inspectBoth",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "inspectBoth"
        }
      ]
    },
    {
      "definitionName": "bimap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "bimap"
        }
      ]
    },
    {
      "definitionName": "mapLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "mapLeft"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "imap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "imap"
        }
      ]
    },
    {
      "definitionName": "bindTo",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "bindTo"
        }
      ]
    },
    {
      "definitionName": "flap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "flap"
        }
      ]
    },
    {
      "definitionName": "as",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "as"
        }
      ]
    },
    {
      "definitionName": "sequence",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "sequence"
        }
      ]
    },
    {
      "definitionName": "elem",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "elem"
        }
      ]
    },
    {
      "definitionName": "exists",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "exists"
        }
      ]
    },
    {
      "definitionName": "catchAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "catchAll"
        }
      ]
    },
    {
      "definitionName": "orElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "orElse"
        }
      ]
    },
    {
      "definitionName": "orElseEither",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "orElseEither"
        }
      ]
    },
    {
      "definitionName": "orElseFail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "orElseFail"
        }
      ]
    },
    {
      "definitionName": "orElseSucceed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "orElseSucceed"
        }
      ]
    },
    {
      "definitionName": "firstRightOrBothOf",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "firstRightOrBothOf"
        }
      ]
    },
    {
      "definitionName": "compact",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "compact"
        }
      ]
    },
    {
      "definitionName": "filter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "filter"
        }
      ]
    },
    {
      "definitionName": "filterMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These",
          "name": "filterMap"
        }
      ]
    },
    {
      "definitionName": "product",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These.Validated",
          "name": "product"
        }
      ]
    },
    {
      "definitionName": "productMany",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These.Validated",
          "name": "productMany"
        }
      ]
    },
    {
      "definitionName": "ap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These.Validated",
          "name": "ap"
        }
      ]
    },
    {
      "definitionName": "andThenBind",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These.Validated",
          "name": "andThenBind"
        }
      ]
    },
    {
      "definitionName": "andThenBindEither",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These.Validated",
          "name": "andThenBindEither"
        }
      ]
    },
    {
      "definitionName": "andThenBindThese",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These.Validated",
          "name": "andThenBindThese"
        }
      ]
    },
    {
      "definitionName": "productFlatten",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These.Validated",
          "name": "productFlatten"
        }
      ]
    },
    {
      "definitionName": "flatMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These.Validated",
          "name": "flatMap"
        }
      ]
    },
    {
      "definitionName": "andThen",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These.Validated",
          "name": "andThen"
        }
      ]
    },
    {
      "definitionName": "bind",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These.Validated",
          "name": "bind"
        }
      ]
    },
    {
      "definitionName": "bindEither",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These.Validated",
          "name": "bindEither"
        }
      ]
    },
    {
      "definitionName": "bindThese",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These.Validated",
          "name": "bindThese"
        }
      ]
    },
    {
      "definitionName": "andThenDiscard",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These.Validated",
          "name": "andThenDiscard"
        }
      ]
    },
    {
      "definitionName": "tap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/These.Validated",
          "name": "tap"
        }
      ]
    },
    {
      "definitionName": "reverse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/These",
          "name": "reverse"
        }
      ]
    },
    {
      "definitionName": "isLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/These",
          "name": "isLeft"
        }
      ]
    },
    {
      "definitionName": "isLeftOrBoth",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/These",
          "name": "isLeftOrBoth"
        }
      ]
    },
    {
      "definitionName": "isRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/These",
          "name": "isRight"
        }
      ]
    },
    {
      "definitionName": "isRightOrBoth",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/These",
          "name": "isRightOrBoth"
        }
      ]
    },
    {
      "definitionName": "isBoth",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/These",
          "name": "isBoth"
        }
      ]
    },
    {
      "definitionName": "absolve",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/These",
          "name": "absolve"
        }
      ]
    },
    {
      "definitionName": "condemn",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/These",
          "name": "condemn"
        }
      ]
    },
    {
      "definitionName": "getRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/These",
          "name": "getRight"
        }
      ]
    },
    {
      "definitionName": "getRightOnly",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/These",
          "name": "getRightOnly"
        }
      ]
    },
    {
      "definitionName": "getLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/These",
          "name": "getLeft"
        }
      ]
    },
    {
      "definitionName": "getLeftOnly",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/These",
          "name": "getLeftOnly"
        }
      ]
    },
    {
      "definitionName": "getBoth",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/These",
          "name": "getBoth"
        }
      ]
    },
    {
      "definitionName": "getOrNull",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/These",
          "name": "getOrNull"
        }
      ]
    },
    {
      "definitionName": "getOrUndefined",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/These",
          "name": "getOrUndefined"
        }
      ]
    },
    {
      "definitionName": "tupled",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/These",
          "name": "tupled"
        }
      ]
    },
    {
      "definitionName": "asUnit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/These",
          "name": "asUnit"
        }
      ]
    },
    {
      "definitionName": "flatten",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/These.Validated",
          "name": "flatten"
        }
      ]
    }
  ],
  "@fp-ts/data/typeclass/CovariantWithIndex": [
    {
      "definitionName": "CovariantWithIndex",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/typeclass/CovariantWithIndex"
        }
      ]
    }
  ],
  "@fp-ts/data/typeclass/FilterableWithIndex": [
    {
      "definitionName": "FilterableWithIndex",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/typeclass/FilterableWithIndex"
        }
      ]
    }
  ],
  "@fp-ts/data/typeclass/Seq": [
    {
      "definitionName": "Seq",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/typeclass/Seq"
        }
      ]
    }
  ],
  "@fp-ts/data/Ordering": [
    {
      "definitionName": "Ordering",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Ordering"
        }
      ]
    },
    {
      "definitionName": "match",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "fp-ts/data/Ordering",
          "name": "match"
        }
      ]
    },
    {
      "definitionName": "reverse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "fp-ts/data/Ordering",
          "name": "reverse"
        }
      ]
    }
  ],
  "@fp-ts/data/Json": [
    {
      "definitionName": "JsonArray",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Json.Array"
        }
      ]
    },
    {
      "definitionName": "JsonObject",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Json.Object"
        }
      ]
    },
    {
      "definitionName": "Json",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "fp-ts/data/Json"
        }
      ]
    }
  ],
  "@fp-ts/data/Boolean": [
    {
      "definitionName": "match",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "fp-ts/data/Function.LazyArg",
          "name": "match"
        }
      ]
    }
  ]
}