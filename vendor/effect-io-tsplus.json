{
  "@effect/io/Fiber/Id": [
    {
      "definitionName": "None",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber/Id.None"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber/Id.None"
        }
      ]
    },
    {
      "definitionName": "Runtime",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber/Id.Runtime"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber/Id.Runtime"
        }
      ]
    },
    {
      "definitionName": "Composite",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber/Id.Composite"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber/Id.Composite"
        }
      ]
    },
    {
      "definitionName": "FiberIdTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber/Id.FiberIdTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber/Id.FiberIdTypeId"
        }
      ]
    },
    {
      "definitionName": "FiberId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber/Id"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber/Id"
        }
      ]
    },
    {
      "definitionName": "combine",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber/Id",
          "name": "combine"
        }
      ]
    },
    {
      "definitionName": "getOrElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber/Id",
          "name": "getOrElse"
        }
      ]
    },
    {
      "definitionName": "composite",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Fiber/Id",
          "name": "composite"
        }
      ]
    },
    {
      "definitionName": "isNone",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Id",
          "name": "isNone"
        }
      ]
    },
    {
      "definitionName": "isRuntime",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Id",
          "name": "isRuntime"
        }
      ]
    },
    {
      "definitionName": "isComposite",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Id",
          "name": "isComposite"
        }
      ]
    },
    {
      "definitionName": "ids",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Id",
          "name": "ids"
        }
      ]
    },
    {
      "definitionName": "threadName",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Id",
          "name": "threadName"
        }
      ]
    },
    {
      "definitionName": "toOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Id",
          "name": "toOption"
        }
      ]
    },
    {
      "definitionName": "toSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Id",
          "name": "toSet"
        }
      ]
    }
  ],
  "@effect/io/Debug": [
    {
      "definitionName": "Debug",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Debug"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Debug"
        }
      ]
    }
  ],
  "@effect/io/Exit": [
    {
      "definitionName": "Failure",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Exit.Failure"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Exit.Failure"
        }
      ]
    },
    {
      "definitionName": "Success",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Exit.Success"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Exit.Success"
        }
      ]
    },
    {
      "definitionName": "Exit",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Exit"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Exit"
        }
      ]
    },
    {
      "definitionName": "getOrElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Exit",
          "name": "getOrElse"
        }
      ]
    },
    {
      "definitionName": "exists",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Exit",
          "name": "exists"
        }
      ]
    },
    {
      "definitionName": "as",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Exit",
          "name": "as"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Exit",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapBoth",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Exit",
          "name": "mapBoth"
        }
      ]
    },
    {
      "definitionName": "mapError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Exit",
          "name": "mapError"
        }
      ]
    },
    {
      "definitionName": "mapErrorCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Exit",
          "name": "mapErrorCause"
        }
      ]
    },
    {
      "definitionName": "flatMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Exit",
          "name": "flatMap"
        }
      ]
    },
    {
      "definitionName": "flatMapEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Exit",
          "name": "flatMapEffect"
        }
      ]
    },
    {
      "definitionName": "match",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Exit",
          "name": "match"
        }
      ]
    },
    {
      "definitionName": "matchEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Exit",
          "name": "matchEffect"
        }
      ]
    },
    {
      "definitionName": "forEachEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Exit",
          "name": "forEachEffect"
        }
      ]
    },
    {
      "definitionName": "zip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Exit",
          "name": "zip"
        }
      ]
    },
    {
      "definitionName": "zipLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Exit",
          "name": "zipLeft"
        }
      ]
    },
    {
      "definitionName": "zipRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Exit",
          "name": "zipRight"
        }
      ]
    },
    {
      "definitionName": "zipPar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Exit",
          "name": "zipPar"
        }
      ]
    },
    {
      "definitionName": "zipParLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Exit",
          "name": "zipParLeft"
        }
      ]
    },
    {
      "definitionName": "zipParRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Exit",
          "name": "zipParRight"
        }
      ]
    },
    {
      "definitionName": "zipWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Exit",
          "name": "zipWith"
        }
      ]
    },
    {
      "definitionName": "isFailure",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Exit",
          "name": "isFailure"
        },
        {
          "typeName": "effect/io/Exit.Ops",
          "kind": "static",
          "name": "isFailure"
        }
      ]
    },
    {
      "definitionName": "isSuccess",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Exit",
          "name": "isSuccess"
        },
        {
          "typeName": "effect/io/Exit.Ops",
          "kind": "static",
          "name": "isSuccess"
        }
      ]
    },
    {
      "definitionName": "failCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "failCause"
        }
      ]
    },
    {
      "definitionName": "interrupt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Id",
          "name": "interrupt"
        }
      ]
    },
    {
      "definitionName": "isInterrupted",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Exit",
          "name": "isInterrupted"
        }
      ]
    },
    {
      "definitionName": "causeOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Exit",
          "name": "causeOption"
        }
      ]
    },
    {
      "definitionName": "asUnit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Exit",
          "name": "asUnit"
        }
      ]
    },
    {
      "definitionName": "flatten",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Exit",
          "name": "flatten"
        }
      ]
    },
    {
      "definitionName": "unannotate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Exit",
          "name": "unannotate"
        }
      ]
    }
  ],
  "@effect/io/Deferred": [
    {
      "definitionName": "Deferred",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Deferred"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Deferred"
        }
      ]
    },
    {
      "definitionName": "DeferredTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Deferred.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Deferred.TypeId"
        }
      ]
    },
    {
      "definitionName": "succeed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Deferred",
          "name": "succeed"
        }
      ]
    },
    {
      "definitionName": "sync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Deferred",
          "name": "sync"
        }
      ]
    },
    {
      "definitionName": "fail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Deferred",
          "name": "fail"
        }
      ]
    },
    {
      "definitionName": "failSync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Deferred",
          "name": "failSync"
        }
      ]
    },
    {
      "definitionName": "failCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Deferred",
          "name": "failCause"
        }
      ]
    },
    {
      "definitionName": "failCauseSync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Deferred",
          "name": "failCauseSync"
        }
      ]
    },
    {
      "definitionName": "die",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Deferred",
          "name": "die"
        }
      ]
    },
    {
      "definitionName": "dieSync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Deferred",
          "name": "dieSync"
        }
      ]
    },
    {
      "definitionName": "interruptWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Deferred",
          "name": "interruptWith"
        }
      ]
    },
    {
      "definitionName": "done",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Deferred",
          "name": "done"
        }
      ]
    },
    {
      "definitionName": "complete",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Deferred",
          "name": "complete"
        }
      ]
    },
    {
      "definitionName": "completeWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Deferred",
          "name": "completeWith"
        }
      ]
    },
    {
      "definitionName": "unsafeDone",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Deferred",
          "name": "unsafeDone"
        }
      ]
    },
    {
      "definitionName": "interrupt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Deferred",
          "name": "interrupt"
        }
      ]
    },
    {
      "definitionName": "isDone",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Deferred",
          "name": "isDone"
        }
      ]
    },
    {
      "definitionName": "poll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Deferred",
          "name": "poll"
        }
      ]
    }
  ],
  "@effect/io/ExecutionStrategy": [
    {
      "definitionName": "Sequential",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ExecutionStrategy.Sequential"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ExecutionStrategy.Sequential"
        }
      ]
    },
    {
      "definitionName": "Parallel",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ExecutionStrategy.Parallel"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ExecutionStrategy.Parallel"
        }
      ]
    },
    {
      "definitionName": "ParallelN",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ExecutionStrategy.ParallelN"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ExecutionStrategy.ParallelN"
        }
      ]
    },
    {
      "definitionName": "ExecutionStrategy",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ExecutionStrategy"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ExecutionStrategy"
        }
      ]
    },
    {
      "definitionName": "match",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/ExecutionStrategy",
          "name": "match"
        }
      ]
    },
    {
      "definitionName": "isSequential",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/ExecutionStrategy",
          "name": "isSequential"
        }
      ]
    },
    {
      "definitionName": "isParallel",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/ExecutionStrategy",
          "name": "isParallel"
        }
      ]
    },
    {
      "definitionName": "isParallelN",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/ExecutionStrategy",
          "name": "isParallelN"
        }
      ]
    }
  ],
  "@effect/io/Config/Error": [
    {
      "definitionName": "And",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Config/Error.And"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Config/Error.And"
        }
      ]
    },
    {
      "definitionName": "Or",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Config/Error.Or"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Config/Error.Or"
        }
      ]
    },
    {
      "definitionName": "InvalidData",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Config/Error.InvalidData"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Config/Error.InvalidData"
        }
      ]
    },
    {
      "definitionName": "MissingData",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Config/Error.MissingData"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Config/Error.MissingData"
        }
      ]
    },
    {
      "definitionName": "SourceUnavailable",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Config/Error.SourceUnavailable"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Config/Error.SourceUnavailable"
        }
      ]
    },
    {
      "definitionName": "Unsupported",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Config/Error.Unsupported"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Config/Error.Unsupported"
        }
      ]
    },
    {
      "definitionName": "ConfigErrorTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Config/Error.ConfigErrorTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Config/Error.ConfigErrorTypeId"
        }
      ]
    },
    {
      "definitionName": "ConfigError",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Config/Error"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Config/Error"
        }
      ]
    },
    {
      "definitionName": "prefixed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Config/Error",
          "name": "prefixed"
        }
      ]
    },
    {
      "definitionName": "And",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config/Error",
          "name": "And"
        }
      ]
    },
    {
      "definitionName": "Or",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config/Error",
          "name": "Or"
        }
      ]
    },
    {
      "definitionName": "isAnd",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Config/Error",
          "name": "isAnd"
        }
      ]
    },
    {
      "definitionName": "isOr",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Config/Error",
          "name": "isOr"
        }
      ]
    },
    {
      "definitionName": "isInvalidData",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Config/Error",
          "name": "isInvalidData"
        }
      ]
    },
    {
      "definitionName": "isMissingData",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Config/Error",
          "name": "isMissingData"
        }
      ]
    },
    {
      "definitionName": "isSourceUnavailable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Config/Error",
          "name": "isSourceUnavailable"
        }
      ]
    },
    {
      "definitionName": "isUnsupported",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Config/Error",
          "name": "isUnsupported"
        }
      ]
    }
  ],
  "@effect/io/Config/Secret": [
    {
      "definitionName": "ConfigSecret",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Config/Secret"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Config/Secret"
        }
      ]
    },
    {
      "definitionName": "ConfigSecretTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Config/Secret.ConfigSecretTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Config/Secret.ConfigSecretTypeId"
        }
      ]
    },
    {
      "definitionName": "value",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Config/Secret",
          "name": "value"
        }
      ]
    },
    {
      "definitionName": "unsafeWipe",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Config/Secret",
          "name": "unsafeWipe"
        }
      ]
    }
  ],
  "@effect/io/Config": [
    {
      "definitionName": "Config",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Config"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Config"
        }
      ]
    },
    {
      "definitionName": "ConfigTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Config.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Config.TypeId"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Config",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapAttempt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Config",
          "name": "mapAttempt"
        }
      ]
    },
    {
      "definitionName": "mapOrFail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Config",
          "name": "mapOrFail"
        }
      ]
    },
    {
      "definitionName": "nested",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Config",
          "name": "nested"
        }
      ]
    },
    {
      "definitionName": "orElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Config",
          "name": "orElse"
        }
      ]
    },
    {
      "definitionName": "validate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Config",
          "name": "validate"
        }
      ]
    },
    {
      "definitionName": "withDefault",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Config",
          "name": "withDefault"
        }
      ]
    },
    {
      "definitionName": "withDescription",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Config",
          "name": "withDescription"
        }
      ]
    },
    {
      "definitionName": "zip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Config",
          "name": "zip"
        }
      ]
    },
    {
      "definitionName": "zipWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Config",
          "name": "zipWith"
        }
      ]
    },
    {
      "definitionName": "chunkOf",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config",
          "name": "chunkOf"
        }
      ]
    },
    {
      "definitionName": "listOf",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config",
          "name": "listOf"
        }
      ]
    },
    {
      "definitionName": "setOf",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config",
          "name": "setOf"
        }
      ]
    },
    {
      "definitionName": "table",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Config",
          "name": "table"
        }
      ]
    },
    {
      "definitionName": "optional",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Config",
          "name": "optional"
        }
      ]
    },
    {
      "definitionName": "repeat",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Config",
          "name": "repeat"
        }
      ]
    }
  ],
  "@effect/io/Config/Provider": [
    {
      "definitionName": "ConfigProvider",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Config/Provider"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Config/Provider"
        }
      ]
    },
    {
      "definitionName": "ConfigProviderTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Config/Provider.ConfigProviderTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Config/Provider.ConfigProviderTypeId"
        }
      ]
    },
    {
      "definitionName": "nested",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Config/Provider",
          "name": "nested"
        }
      ]
    },
    {
      "definitionName": "orElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Config/Provider",
          "name": "orElse"
        }
      ]
    }
  ],
  "@effect/io/Scheduler": [
    {
      "definitionName": "Scheduler",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Scheduler"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Scheduler"
        }
      ]
    },
    {
      "definitionName": "Task",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Scheduler.Task"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Scheduler.Task"
        }
      ]
    }
  ],
  "@effect/io/FiberRefs": [
    {
      "definitionName": "FiberRefs",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRefs"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRefs"
        }
      ]
    },
    {
      "definitionName": "FiberRefsSym",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRefs.Sym"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRefs.Sym"
        }
      ]
    },
    {
      "definitionName": "forkAs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/FiberRefs",
          "name": "forkAs"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/FiberRefs",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "getOrDefault",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/FiberRefs",
          "name": "getOrDefault"
        }
      ]
    },
    {
      "definitionName": "joinAs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/FiberRefs",
          "name": "joinAs"
        }
      ]
    },
    {
      "definitionName": "updatedAs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/FiberRefs",
          "name": "updatedAs"
        }
      ]
    },
    {
      "definitionName": "fiberRefs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberRefs",
          "name": "fiberRefs"
        }
      ]
    },
    {
      "definitionName": "setAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberRefs",
          "name": "setAll"
        }
      ]
    }
  ],
  "@effect/io/Fiber/Status": [
    {
      "definitionName": "Done",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber/Status.Done"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber/Status.Done"
        }
      ]
    },
    {
      "definitionName": "Running",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber/Status.Running"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber/Status.Running"
        }
      ]
    },
    {
      "definitionName": "Suspended",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber/Status.Suspended"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber/Status.Suspended"
        }
      ]
    },
    {
      "definitionName": "FiberStatusTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber/Status.FiberStatusTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber/Status.FiberStatusTypeId"
        }
      ]
    },
    {
      "definitionName": "FiberStatus",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber/Status"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber/Status"
        }
      ]
    },
    {
      "definitionName": "running",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Runtime/Flags",
          "name": "running"
        }
      ]
    },
    {
      "definitionName": "isDone",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Status",
          "name": "isDone"
        }
      ]
    },
    {
      "definitionName": "isRunning",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Status",
          "name": "isRunning"
        }
      ]
    },
    {
      "definitionName": "isSuspended",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Status",
          "name": "isSuspended"
        }
      ]
    }
  ],
  "@effect/io/FiberRefs/Patch": [
    {
      "definitionName": "Empty",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRefs/Patch.Empty"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRefs/Patch.Empty"
        }
      ]
    },
    {
      "definitionName": "Add",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRefs/Patch.Add"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRefs/Patch.Add"
        }
      ]
    },
    {
      "definitionName": "Remove",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRefs/Patch.Remove"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRefs/Patch.Remove"
        }
      ]
    },
    {
      "definitionName": "Update",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRefs/Patch.Update"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRefs/Patch.Update"
        }
      ]
    },
    {
      "definitionName": "AndThen",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRefs/Patch.AndThen"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRefs/Patch.AndThen"
        }
      ]
    },
    {
      "definitionName": "FiberRefsPatch",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRefs/Patch"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRefs/Patch"
        }
      ]
    },
    {
      "definitionName": "combine",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/FiberRefs/Patch",
          "name": "combine"
        }
      ]
    },
    {
      "definitionName": "patch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/FiberRefs/Patch",
          "name": "patch"
        }
      ]
    }
  ],
  "@effect/io/Logger/Level": [
    {
      "definitionName": "All",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Logger/Level.All"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Logger/Level.All"
        }
      ]
    },
    {
      "definitionName": "Fatal",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Logger/Level.Fatal"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Logger/Level.Fatal"
        }
      ]
    },
    {
      "definitionName": "Error",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Logger/Level.Error"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Logger/Level.Error"
        }
      ]
    },
    {
      "definitionName": "Warning",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Logger/Level.Warning"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Logger/Level.Warning"
        }
      ]
    },
    {
      "definitionName": "Info",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Logger/Level.Info"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Logger/Level.Info"
        }
      ]
    },
    {
      "definitionName": "Debug",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Logger/Level.Debug"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Logger/Level.Debug"
        }
      ]
    },
    {
      "definitionName": "Trace",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Logger/Level.Trace"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Logger/Level.Trace"
        }
      ]
    },
    {
      "definitionName": "None",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Logger/Level.None"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Logger/Level.None"
        }
      ]
    },
    {
      "definitionName": "LogLevel",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Logger/Level.LogLevel"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Logger/Level.LogLevel"
        }
      ]
    },
    {
      "definitionName": "locally",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "locally"
        }
      ]
    },
    {
      "definitionName": "lessThan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Logger/Level.LogLevel",
          "name": "lessThan"
        }
      ]
    },
    {
      "definitionName": "lessThanEqual",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Logger/Level.LogLevel",
          "name": "lessThanEqual"
        }
      ]
    },
    {
      "definitionName": "greaterThan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Logger/Level.LogLevel",
          "name": "greaterThan"
        }
      ]
    },
    {
      "definitionName": "greaterThanEqual",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Logger/Level.LogLevel",
          "name": "greaterThanEqual"
        }
      ]
    }
  ],
  "@effect/io/Logger/Span": [
    {
      "definitionName": "LogSpan",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Logger/Span.LogSpan"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Logger/Span.LogSpan"
        }
      ]
    },
    {
      "definitionName": "render",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Logger/Span.LogSpan",
          "name": "render"
        }
      ]
    }
  ],
  "@effect/io/Metric/Boundaries": [
    {
      "definitionName": "MetricBoundaries",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/Boundaries"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/Boundaries"
        }
      ]
    },
    {
      "definitionName": "MetricBoundariesTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/Boundaries.MetricBoundariesTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/Boundaries.MetricBoundariesTypeId"
        }
      ]
    }
  ],
  "@effect/io/Metric/State": [
    {
      "definitionName": "MetricState",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/State"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/State"
        }
      ]
    },
    {
      "definitionName": "MetricStateTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/State.MetricStateTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/State.MetricStateTypeId"
        }
      ]
    },
    {
      "definitionName": "CounterStateTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/State.CounterStateTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/State.CounterStateTypeId"
        }
      ]
    },
    {
      "definitionName": "FrequencyStateTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/State.FrequencyStateTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/State.FrequencyStateTypeId"
        }
      ]
    },
    {
      "definitionName": "GaugeStateTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/State.GaugeStateTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/State.GaugeStateTypeId"
        }
      ]
    },
    {
      "definitionName": "HistogramStateTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/State.HistogramStateTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/State.HistogramStateTypeId"
        }
      ]
    },
    {
      "definitionName": "SummaryStateTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/State.SummaryStateTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/State.SummaryStateTypeId"
        }
      ]
    }
  ],
  "@effect/io/Metric/KeyType": [
    {
      "definitionName": "MetricKeyType",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/KeyType"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/KeyType"
        }
      ]
    },
    {
      "definitionName": "MetricKeyTypeTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/KeyType.MetricKeyTypeTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/KeyType.MetricKeyTypeTypeId"
        }
      ]
    },
    {
      "definitionName": "CounterKeyTypeTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/KeyType.CounterKeyTypeTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/KeyType.CounterKeyTypeTypeId"
        }
      ]
    },
    {
      "definitionName": "FrequencyKeyTypeTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/KeyType.FrequencyKeyTypeTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/KeyType.FrequencyKeyTypeTypeId"
        }
      ]
    },
    {
      "definitionName": "GaugeKeyTypeTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/KeyType.GaugeKeyTypeTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/KeyType.GaugeKeyTypeTypeId"
        }
      ]
    },
    {
      "definitionName": "HistogramKeyTypeTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/KeyType.HistogramKeyTypeTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/KeyType.HistogramKeyTypeTypeId"
        }
      ]
    },
    {
      "definitionName": "SummaryKeyTypeTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/KeyType.SummaryKeyTypeTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/KeyType.SummaryKeyTypeTypeId"
        }
      ]
    },
    {
      "definitionName": "histogram",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Metric/Boundaries",
          "name": "histogram"
        }
      ]
    }
  ],
  "@effect/io/Metric/Label": [
    {
      "definitionName": "MetricLabel",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/Label"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/Label"
        }
      ]
    },
    {
      "definitionName": "MetricLabelTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/Label.MetricLabelTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/Label.MetricLabelTypeId"
        }
      ]
    }
  ],
  "@effect/io/Metric/Key": [
    {
      "definitionName": "MetricKey",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/Key"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/Key"
        }
      ]
    },
    {
      "definitionName": "MetricKeyTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/Key.MetricKeyTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/Key.MetricKeyTypeId"
        }
      ]
    },
    {
      "definitionName": "tagged",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Metric/Key",
          "name": "tagged"
        }
      ]
    },
    {
      "definitionName": "taggedWithLabels",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Metric/Key",
          "name": "taggedWithLabels"
        }
      ]
    },
    {
      "definitionName": "taggedWithLabelSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Metric/Key",
          "name": "taggedWithLabelSet"
        }
      ]
    }
  ],
  "@effect/io/Metric/Hook": [
    {
      "definitionName": "MetricHook",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/Hook"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/Hook"
        }
      ]
    },
    {
      "definitionName": "MetricHookTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/Hook.MetricHookTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/Hook.MetricHookTypeId"
        }
      ]
    },
    {
      "definitionName": "onUpdate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Metric/Hook",
          "name": "onUpdate"
        }
      ]
    }
  ],
  "@effect/io/Metric/Pair": [
    {
      "definitionName": "MetricPair",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/Pair"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/Pair"
        }
      ]
    },
    {
      "definitionName": "MetricPairTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/Pair.MetricPairTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/Pair.MetricPairTypeId"
        }
      ]
    }
  ],
  "@effect/io/Metric/Registry": [
    {
      "definitionName": "MetricRegistry",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/Registry"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/Registry"
        }
      ]
    },
    {
      "definitionName": "MetricRegistryTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/Registry.MetricRegistryTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/Registry.MetricRegistryTypeId"
        }
      ]
    }
  ],
  "@effect/io/Metric": [
    {
      "definitionName": "Metric",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric"
        }
      ]
    },
    {
      "definitionName": "MetricApply",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric.Apply"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric.Apply"
        }
      ]
    },
    {
      "definitionName": "MetricTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric.TypeId"
        }
      ]
    },
    {
      "definitionName": "contramap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Metric",
          "name": "contramap"
        }
      ]
    },
    {
      "definitionName": "counter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "counter"
        }
      ]
    },
    {
      "definitionName": "frequency",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "frequency"
        }
      ]
    },
    {
      "definitionName": "gauge",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "gauge"
        }
      ]
    },
    {
      "definitionName": "histogram",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "histogram"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Metric",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapType",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Metric",
          "name": "mapType"
        }
      ]
    },
    {
      "definitionName": "succeed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "succeed"
        }
      ]
    },
    {
      "definitionName": "sync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "sync"
        }
      ]
    },
    {
      "definitionName": "summary",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "summary"
        }
      ]
    },
    {
      "definitionName": "summaryTimestamp",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "summaryTimestamp"
        }
      ]
    },
    {
      "definitionName": "tagged",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Metric",
          "name": "tagged"
        }
      ]
    },
    {
      "definitionName": "taggedWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Metric",
          "name": "taggedWith"
        }
      ]
    },
    {
      "definitionName": "taggedWithLabels",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Metric",
          "name": "taggedWithLabels"
        }
      ]
    },
    {
      "definitionName": "taggedWithLabelSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Metric",
          "name": "taggedWithLabelSet"
        }
      ]
    },
    {
      "definitionName": "timer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "timer"
        }
      ]
    },
    {
      "definitionName": "trackDefect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "trackDefect"
        }
      ]
    },
    {
      "definitionName": "trackDuration",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "trackDuration"
        }
      ]
    },
    {
      "definitionName": "trackError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "trackError"
        }
      ]
    },
    {
      "definitionName": "trackSuccess",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "trackSuccess"
        }
      ]
    },
    {
      "definitionName": "update",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Metric",
          "name": "update"
        }
      ]
    },
    {
      "definitionName": "zip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Metric",
          "name": "zip"
        }
      ]
    },
    {
      "definitionName": "value",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Metric",
          "name": "value"
        }
      ]
    },
    {
      "definitionName": "withNow",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Metric",
          "name": "withNow"
        }
      ]
    }
  ],
  "@effect/io/Random": [
    {
      "definitionName": "Random",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Random"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Random"
        }
      ]
    },
    {
      "definitionName": "RandomTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Random.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Random.TypeId"
        }
      ]
    },
    {
      "definitionName": "shuffle",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "shuffle"
        }
      ]
    }
  ],
  "@effect/io/Ref": [
    {
      "definitionName": "Ref",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Ref"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Ref"
        }
      ]
    },
    {
      "definitionName": "RefTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Ref.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Ref.TypeId"
        }
      ]
    },
    {
      "definitionName": "getAndSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref",
          "name": "getAndSet"
        }
      ]
    },
    {
      "definitionName": "getAndUpdate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref",
          "name": "getAndUpdate"
        }
      ]
    },
    {
      "definitionName": "getAndUpdateSome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref",
          "name": "getAndUpdateSome"
        }
      ]
    },
    {
      "definitionName": "modify",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref",
          "name": "modify"
        }
      ]
    },
    {
      "definitionName": "modifySome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref",
          "name": "modifySome"
        }
      ]
    },
    {
      "definitionName": "set",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref",
          "name": "set"
        }
      ]
    },
    {
      "definitionName": "setAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref",
          "name": "setAndGet"
        }
      ]
    },
    {
      "definitionName": "update",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref",
          "name": "update"
        }
      ]
    },
    {
      "definitionName": "updateAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref",
          "name": "updateAndGet"
        }
      ]
    },
    {
      "definitionName": "updateSome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref",
          "name": "updateSome"
        }
      ]
    },
    {
      "definitionName": "updateSomeAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref",
          "name": "updateSomeAndGet"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Ref",
          "name": "get"
        }
      ]
    }
  ],
  "@effect/io/Tracer": [
    {
      "definitionName": "Tracer",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Tracer"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Tracer"
        }
      ]
    },
    {
      "definitionName": "TracerTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Tracer.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Tracer.TypeId"
        }
      ]
    }
  ],
  "@effect/io/Schedule/Interval": [
    {
      "definitionName": "Interval",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Schedule/Interval"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Schedule/Interval"
        }
      ]
    },
    {
      "definitionName": "IntervalTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Schedule/Interval.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Schedule/Interval.TypeId"
        }
      ]
    },
    {
      "definitionName": "lessThan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule/Interval",
          "name": "lessThan"
        },
        {
          "typeName": "effect/io/Schedule/Interval",
          "kind": "pipeable-operator",
          "name": "<"
        }
      ]
    },
    {
      "definitionName": "min",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule/Interval",
          "name": "min"
        }
      ]
    },
    {
      "definitionName": "max",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule/Interval",
          "name": "max"
        }
      ]
    },
    {
      "definitionName": "intersect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule/Interval",
          "name": "intersect"
        }
      ]
    },
    {
      "definitionName": "union",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule/Interval",
          "name": "union"
        }
      ]
    },
    {
      "definitionName": "isEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule/Interval",
          "name": "isEmpty"
        }
      ]
    },
    {
      "definitionName": "isNonEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule/Interval",
          "name": "isNonEmpty"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule/Interval",
          "name": "size"
        }
      ]
    }
  ],
  "@effect/io/Schedule/Intervals": [
    {
      "definitionName": "Intervals",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Schedule/Intervals"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Schedule/Intervals"
        }
      ]
    },
    {
      "definitionName": "IntervalsTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Schedule/Intervals.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Schedule/Intervals.TypeId"
        }
      ]
    },
    {
      "definitionName": "union",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule/Intervals",
          "name": "union"
        },
        {
          "typeName": "effect/io/Schedule/Intervals",
          "kind": "pipeable-operator",
          "name": "||"
        }
      ]
    },
    {
      "definitionName": "intersect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule/Intervals",
          "name": "intersect"
        },
        {
          "typeName": "effect/io/Schedule/Intervals",
          "kind": "pipeable-operator",
          "name": "&&"
        }
      ]
    },
    {
      "definitionName": "lessThan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule/Intervals",
          "name": "lessThan"
        },
        {
          "typeName": "effect/io/Schedule/Intervals",
          "kind": "pipeable-operator",
          "name": "<"
        }
      ]
    },
    {
      "definitionName": "max",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule/Intervals",
          "name": "max"
        }
      ]
    },
    {
      "definitionName": "start",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule/Intervals",
          "name": "start"
        }
      ]
    },
    {
      "definitionName": "end",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule/Intervals",
          "name": "end"
        }
      ]
    },
    {
      "definitionName": "isNonEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule/Intervals",
          "name": "isNonEmpty"
        }
      ]
    }
  ],
  "@effect/io/Schedule/Decision": [
    {
      "definitionName": "Continue",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Schedule/Decision.Continue"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Schedule/Decision.Continue"
        }
      ]
    },
    {
      "definitionName": "Done",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Schedule/Decision.Done"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Schedule/Decision.Done"
        }
      ]
    },
    {
      "definitionName": "ScheduleDecision",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Schedule/Decision"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Schedule/Decision"
        }
      ]
    },
    {
      "definitionName": "continueWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule/Interval",
          "name": "continueWith"
        }
      ]
    },
    {
      "definitionName": "isContinue",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule/Decision",
          "name": "isContinue"
        }
      ]
    },
    {
      "definitionName": "isDone",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule/Decision",
          "name": "isDone"
        }
      ]
    }
  ],
  "@effect/io/Schedule": [
    {
      "definitionName": "Schedule",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Schedule"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Schedule"
        }
      ]
    },
    {
      "definitionName": "ScheduleDriver",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Schedule.Driver"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Schedule.Driver"
        }
      ]
    },
    {
      "definitionName": "ScheduleTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Schedule.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Schedule.TypeId"
        }
      ]
    },
    {
      "definitionName": "ScheduleDriverTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Schedule.DriverTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Schedule.DriverTypeId"
        }
      ]
    },
    {
      "definitionName": "addDelay",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "addDelay"
        }
      ]
    },
    {
      "definitionName": "addDelayEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "addDelayEffect"
        }
      ]
    },
    {
      "definitionName": "andThen",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "andThen"
        },
        {
          "typeName": "effect/io/Schedule",
          "kind": "pipeable-operator",
          "name": "/"
        }
      ]
    },
    {
      "definitionName": "andThenEither",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "andThenEither"
        },
        {
          "typeName": "effect/io/Schedule",
          "kind": "pipeable-operator",
          "name": "%"
        }
      ]
    },
    {
      "definitionName": "as",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "as"
        }
      ]
    },
    {
      "definitionName": "bothInOut",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "bothInOut"
        },
        {
          "typeName": "effect/io/Schedule",
          "kind": "pipeable-operator",
          "name": "**"
        }
      ]
    },
    {
      "definitionName": "check",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "check"
        }
      ]
    },
    {
      "definitionName": "checkEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "checkEffect"
        }
      ]
    },
    {
      "definitionName": "choose",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "choose"
        },
        {
          "typeName": "effect/io/Schedule",
          "kind": "pipeable-operator",
          "name": "+"
        }
      ]
    },
    {
      "definitionName": "chooseMerge",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "chooseMerge"
        }
      ]
    },
    {
      "definitionName": "compose",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "compose"
        },
        {
          "typeName": "effect/io/Schedule",
          "kind": "pipeable-operator",
          "name": ">>"
        }
      ]
    },
    {
      "definitionName": "contramap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "contramap"
        }
      ]
    },
    {
      "definitionName": "contramapEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "contramapEffect"
        }
      ]
    },
    {
      "definitionName": "delayed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "delayed"
        }
      ]
    },
    {
      "definitionName": "delayedEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "delayedEffect"
        }
      ]
    },
    {
      "definitionName": "dimap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "dimap"
        }
      ]
    },
    {
      "definitionName": "dimapEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "dimapEffect"
        }
      ]
    },
    {
      "definitionName": "either",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "either"
        }
      ]
    },
    {
      "definitionName": "eitherWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "eitherWith"
        }
      ]
    },
    {
      "definitionName": "ensuring",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "ensuring"
        }
      ]
    },
    {
      "definitionName": "fold",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "fold"
        }
      ]
    },
    {
      "definitionName": "foldEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "foldEffect"
        }
      ]
    },
    {
      "definitionName": "intersect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "intersect"
        },
        {
          "typeName": "effect/io/Schedule",
          "kind": "pipeable-operator",
          "name": "&&"
        }
      ]
    },
    {
      "definitionName": "intersectWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "intersectWith"
        }
      ]
    },
    {
      "definitionName": "jittered",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "jittered"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "mapEffect"
        }
      ]
    },
    {
      "definitionName": "modifyDelay",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "modifyDelay"
        }
      ]
    },
    {
      "definitionName": "modifyDelayEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "modifyDelayEffect"
        }
      ]
    },
    {
      "definitionName": "onDecision",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "onDecision"
        }
      ]
    },
    {
      "definitionName": "provideEnvironment",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "provideEnvironment"
        }
      ]
    },
    {
      "definitionName": "provideService",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "provideService"
        }
      ]
    },
    {
      "definitionName": "provideSomeEnvironment",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "provideSomeEnvironment"
        }
      ]
    },
    {
      "definitionName": "reconsider",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "reconsider"
        }
      ]
    },
    {
      "definitionName": "reconsiderEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "reconsiderEffect"
        }
      ]
    },
    {
      "definitionName": "resetAfter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "resetAfter"
        }
      ]
    },
    {
      "definitionName": "resetWhen",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "resetWhen"
        }
      ]
    },
    {
      "definitionName": "run",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "run"
        }
      ]
    },
    {
      "definitionName": "tapInput",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "tapInput"
        }
      ]
    },
    {
      "definitionName": "tapOutput",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "tapOutput"
        }
      ]
    },
    {
      "definitionName": "union",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "union"
        },
        {
          "typeName": "effect/io/Schedule",
          "kind": "pipeable-operator",
          "name": "||"
        }
      ]
    },
    {
      "definitionName": "unionWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "unionWith"
        }
      ]
    },
    {
      "definitionName": "untilInput",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "untilInput"
        }
      ]
    },
    {
      "definitionName": "untilInputEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "untilInputEffect"
        }
      ]
    },
    {
      "definitionName": "untilOutput",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "untilOutput"
        }
      ]
    },
    {
      "definitionName": "untilOutputEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "untilOutputEffect"
        }
      ]
    },
    {
      "definitionName": "upTo",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "upTo"
        }
      ]
    },
    {
      "definitionName": "whileInput",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "whileInput"
        }
      ]
    },
    {
      "definitionName": "whileInputEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "whileInputEffect"
        }
      ]
    },
    {
      "definitionName": "whileOutput",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "whileOutput"
        }
      ]
    },
    {
      "definitionName": "whileOutputEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "whileOutputEffect"
        }
      ]
    },
    {
      "definitionName": "zipLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "zipLeft"
        },
        {
          "typeName": "effect/io/Schedule",
          "kind": "pipeable-operator",
          "name": "<"
        }
      ]
    },
    {
      "definitionName": "zipRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "zipRight"
        },
        {
          "typeName": "effect/io/Schedule",
          "kind": "pipeable-operator",
          "name": ">"
        }
      ]
    },
    {
      "definitionName": "zipWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Schedule",
          "name": "zipWith"
        }
      ]
    },
    {
      "definitionName": "asUnit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule",
          "name": "asUnit"
        }
      ]
    },
    {
      "definitionName": "collectAllOutputs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule",
          "name": "collectAllOutputs"
        }
      ]
    },
    {
      "definitionName": "delayedSchedule",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule",
          "name": "delayedSchedule"
        }
      ]
    },
    {
      "definitionName": "delays",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule",
          "name": "delays"
        }
      ]
    },
    {
      "definitionName": "driver",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule",
          "name": "driver"
        }
      ]
    },
    {
      "definitionName": "left",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule",
          "name": "left"
        }
      ]
    },
    {
      "definitionName": "passthrough",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule",
          "name": "passthrough"
        }
      ]
    },
    {
      "definitionName": "repetitions",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule",
          "name": "repetitions"
        }
      ]
    },
    {
      "definitionName": "right",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Schedule",
          "name": "right"
        }
      ]
    }
  ],
  "@effect/io/Ref/Synchronized": [
    {
      "definitionName": "Synchronized",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Ref/Synchronized"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Ref/Synchronized"
        }
      ]
    },
    {
      "definitionName": "SynchronizedTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Ref/Synchronized.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Ref/Synchronized.TypeId"
        }
      ]
    },
    {
      "definitionName": "getAndSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref/Synchronized",
          "name": "getAndSet"
        }
      ]
    },
    {
      "definitionName": "getAndUpdate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref/Synchronized",
          "name": "getAndUpdate"
        }
      ]
    },
    {
      "definitionName": "getAndUpdateEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref/Synchronized",
          "name": "getAndUpdateEffect"
        }
      ]
    },
    {
      "definitionName": "getAndUpdateSome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref/Synchronized",
          "name": "getAndUpdateSome"
        }
      ]
    },
    {
      "definitionName": "getAndUpdateSomeEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref/Synchronized",
          "name": "getAndUpdateSomeEffect"
        }
      ]
    },
    {
      "definitionName": "modify",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref/Synchronized",
          "name": "modify"
        }
      ]
    },
    {
      "definitionName": "modifyEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref/Synchronized",
          "name": "modifyEffect"
        }
      ]
    },
    {
      "definitionName": "modifySome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref/Synchronized",
          "name": "modifySome"
        }
      ]
    },
    {
      "definitionName": "modifySomeEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref/Synchronized",
          "name": "modifySomeEffect"
        }
      ]
    },
    {
      "definitionName": "set",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref/Synchronized",
          "name": "set"
        }
      ]
    },
    {
      "definitionName": "setAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref/Synchronized",
          "name": "setAndGet"
        }
      ]
    },
    {
      "definitionName": "update",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref/Synchronized",
          "name": "update"
        }
      ]
    },
    {
      "definitionName": "updateEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref/Synchronized",
          "name": "updateEffect"
        }
      ]
    },
    {
      "definitionName": "updateAndGetEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref/Synchronized",
          "name": "updateAndGetEffect"
        }
      ]
    },
    {
      "definitionName": "updateSome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref/Synchronized",
          "name": "updateSome"
        }
      ]
    },
    {
      "definitionName": "updateSomeEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref/Synchronized",
          "name": "updateSomeEffect"
        }
      ]
    },
    {
      "definitionName": "updateSomeAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref/Synchronized",
          "name": "updateSomeAndGet"
        }
      ]
    },
    {
      "definitionName": "updateSomeAndGetEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Ref/Synchronized",
          "name": "updateSomeAndGetEffect"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Ref/Synchronized",
          "name": "get"
        }
      ]
    }
  ],
  "@effect/io/Scope": [
    {
      "definitionName": "Scope",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Scope"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Scope"
        }
      ]
    },
    {
      "definitionName": "CloseableScope",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Scope.CloseableScope"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Scope.CloseableScope"
        }
      ]
    },
    {
      "definitionName": "ScopeTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Scope.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Scope.TypeId"
        }
      ]
    },
    {
      "definitionName": "CloseableScopeTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Scope.CloseableScopeTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Scope.CloseableScopeTypeId"
        }
      ]
    },
    {
      "definitionName": "addFinalizer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Scope",
          "name": "addFinalizer"
        }
      ]
    },
    {
      "definitionName": "addFinalizerExit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Scope",
          "name": "addFinalizerExit"
        }
      ]
    },
    {
      "definitionName": "close",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Scope.CloseableScope",
          "name": "close"
        }
      ]
    },
    {
      "definitionName": "extend",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Scope",
          "name": "extend"
        }
      ]
    },
    {
      "definitionName": "fork",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Scope",
          "name": "fork"
        }
      ]
    },
    {
      "definitionName": "use",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Scope.CloseableScope",
          "name": "use"
        }
      ]
    }
  ],
  "@effect/io/Runtime": [
    {
      "definitionName": "AsyncFiber",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Runtime.AsyncFiber"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Runtime.AsyncFiber"
        }
      ]
    },
    {
      "definitionName": "Runtime",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Runtime"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Runtime"
        }
      ]
    }
  ],
  "@effect/io/Layer": [
    {
      "definitionName": "Layer",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Layer"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Layer"
        }
      ]
    },
    {
      "definitionName": "LayerTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Layer.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Layer.TypeId"
        }
      ]
    },
    {
      "definitionName": "buildWithScope",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Layer",
          "name": "buildWithScope"
        }
      ]
    },
    {
      "definitionName": "catchAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Layer",
          "name": "catchAll"
        }
      ]
    },
    {
      "definitionName": "flatMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Layer",
          "name": "flatMap"
        }
      ]
    },
    {
      "definitionName": "flatten",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Layer",
          "name": "flatten"
        }
      ]
    },
    {
      "definitionName": "foldLayer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Layer",
          "name": "foldLayer"
        }
      ]
    },
    {
      "definitionName": "foldCauseLayer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Layer",
          "name": "foldCauseLayer"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Layer",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Layer",
          "name": "mapError"
        }
      ]
    },
    {
      "definitionName": "merge",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Layer",
          "name": "merge"
        },
        {
          "typeName": "effect/io/Layer",
          "kind": "pipeable-operator",
          "name": "+"
        }
      ]
    },
    {
      "definitionName": "orElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Layer",
          "name": "orElse"
        },
        {
          "typeName": "effect/io/Layer",
          "kind": "pipeable-operator",
          "name": "|"
        }
      ]
    },
    {
      "definitionName": "provideTo",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Layer",
          "name": "provideTo"
        },
        {
          "typeName": "effect/io/Layer",
          "kind": "pipeable-operator",
          "name": ">>"
        }
      ]
    },
    {
      "definitionName": "provideToAndMerge",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Layer",
          "name": "provideToAndMerge"
        },
        {
          "typeName": "effect/io/Layer",
          "kind": "pipeable-operator",
          "name": ">"
        }
      ]
    },
    {
      "definitionName": "retry",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Layer",
          "name": "retry"
        }
      ]
    },
    {
      "definitionName": "scoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "scoped"
        }
      ]
    },
    {
      "definitionName": "tap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Layer",
          "name": "tap"
        }
      ]
    },
    {
      "definitionName": "tapError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Layer",
          "name": "tapError"
        }
      ]
    },
    {
      "definitionName": "zipWithPar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Layer",
          "name": "zipWithPar"
        }
      ]
    },
    {
      "definitionName": "isFresh",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Layer",
          "name": "isFresh"
        }
      ]
    },
    {
      "definitionName": "build",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Layer",
          "name": "build"
        }
      ]
    },
    {
      "definitionName": "extendScope",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Layer",
          "name": "extendScope"
        }
      ]
    },
    {
      "definitionName": "failCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "failCause"
        }
      ]
    },
    {
      "definitionName": "fresh",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Layer",
          "name": "fresh"
        }
      ]
    },
    {
      "definitionName": "launch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Layer",
          "name": "launch"
        }
      ]
    },
    {
      "definitionName": "memoize",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Layer",
          "name": "memoize"
        }
      ]
    },
    {
      "definitionName": "orDie",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Layer",
          "name": "orDie"
        }
      ]
    },
    {
      "definitionName": "passthrough",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Layer",
          "name": "passthrough"
        }
      ]
    },
    {
      "definitionName": "scopedDiscard",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "scopedDiscard"
        }
      ]
    },
    {
      "definitionName": "scopedEnvironment",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "scopedEnvironment"
        }
      ]
    },
    {
      "definitionName": "toRuntime",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Layer",
          "name": "toRuntime"
        }
      ]
    }
  ],
  "@effect/io/Supervisor": [
    {
      "definitionName": "Supervisor",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Supervisor"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Supervisor"
        }
      ]
    },
    {
      "definitionName": "SupervisorTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Supervisor.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Supervisor.TypeId"
        }
      ]
    },
    {
      "definitionName": "addSupervisor",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Supervisor",
          "name": "addSupervisor"
        }
      ]
    }
  ],
  "@effect/io/Logger": [
    {
      "definitionName": "Logger",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Logger"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Logger"
        }
      ]
    },
    {
      "definitionName": "LoggerTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Logger.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Logger.TypeId"
        }
      ]
    },
    {
      "definitionName": "contramap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Logger",
          "name": "contramap"
        }
      ]
    },
    {
      "definitionName": "filterLogLevel",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Logger",
          "name": "filterLogLevel"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Logger",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "test",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Logger",
          "name": "test"
        }
      ]
    },
    {
      "definitionName": "zip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Logger",
          "name": "zip"
        }
      ]
    },
    {
      "definitionName": "zipLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Logger",
          "name": "zipLeft"
        }
      ]
    },
    {
      "definitionName": "zipRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Logger",
          "name": "zipRight"
        }
      ]
    },
    {
      "definitionName": "addLogger",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Logger",
          "name": "addLogger"
        }
      ]
    }
  ],
  "@effect/io/FiberRef": [
    {
      "definitionName": "FiberRef",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRef"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRef"
        }
      ]
    },
    {
      "definitionName": "Variance",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRef.Variance"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRef.Variance"
        }
      ]
    },
    {
      "definitionName": "FiberRefTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/FiberRef.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/FiberRef.TypeId"
        }
      ]
    },
    {
      "definitionName": "getAndSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/FiberRef",
          "name": "getAndSet"
        }
      ]
    },
    {
      "definitionName": "getAndUpdate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/FiberRef",
          "name": "getAndUpdate"
        }
      ]
    },
    {
      "definitionName": "getAndUpdateSome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/FiberRef",
          "name": "getAndUpdateSome"
        }
      ]
    },
    {
      "definitionName": "getWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/FiberRef",
          "name": "getWith"
        }
      ]
    },
    {
      "definitionName": "set",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/FiberRef",
          "name": "set"
        }
      ]
    },
    {
      "definitionName": "modify",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/FiberRef",
          "name": "modify"
        }
      ]
    },
    {
      "definitionName": "modifySome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/FiberRef",
          "name": "modifySome"
        }
      ]
    },
    {
      "definitionName": "update",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/FiberRef",
          "name": "update"
        }
      ]
    },
    {
      "definitionName": "updateSome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/FiberRef",
          "name": "updateSome"
        }
      ]
    },
    {
      "definitionName": "updateAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/FiberRef",
          "name": "updateAndGet"
        }
      ]
    },
    {
      "definitionName": "updateSomeAndGet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/FiberRef",
          "name": "updateSomeAndGet"
        }
      ]
    },
    {
      "definitionName": "locallyScoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/FiberRef",
          "name": "locallyScoped"
        }
      ]
    },
    {
      "definitionName": "locallyScopedWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/FiberRef",
          "name": "locallyScopedWith"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberRef",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "reset",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberRef",
          "name": "reset"
        }
      ]
    }
  ],
  "@effect/io/Clock": [
    {
      "definitionName": "Clock",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Clock"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Clock"
        }
      ]
    },
    {
      "definitionName": "ClockScheduler",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Clock.Scheduler"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Clock.Scheduler"
        }
      ]
    },
    {
      "definitionName": "ClockTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Clock.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Clock.TypeId"
        }
      ]
    },
    {
      "definitionName": "CancelToken",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Clock.CancelToken"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Clock.CancelToken"
        }
      ]
    },
    {
      "definitionName": "Task",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Clock.Task"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Clock.Task"
        }
      ]
    }
  ],
  "@effect/io/Fiber": [
    {
      "definitionName": "Fiber",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber"
        }
      ]
    },
    {
      "definitionName": "RuntimeFiber",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber.RuntimeFiber"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber.RuntimeFiber"
        }
      ]
    },
    {
      "definitionName": "FiberTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber.TypeId"
        }
      ]
    },
    {
      "definitionName": "RuntimeFiberTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber.RuntimeFiberTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber.RuntimeFiberTypeId"
        }
      ]
    },
    {
      "definitionName": "interruptWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber",
          "name": "interruptWith"
        }
      ]
    },
    {
      "definitionName": "interruptWithFork",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber",
          "name": "interruptWithFork"
        }
      ]
    },
    {
      "definitionName": "interruptAllWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "interruptAllWith"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber",
          "name": "mapEffect"
        }
      ]
    },
    {
      "definitionName": "mapFiber",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber",
          "name": "mapFiber"
        }
      ]
    },
    {
      "definitionName": "match",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber",
          "name": "match"
        }
      ]
    },
    {
      "definitionName": "orElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber",
          "name": "orElse"
        }
      ]
    },
    {
      "definitionName": "orElseEither",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber",
          "name": "orElseEither"
        }
      ]
    },
    {
      "definitionName": "zip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber",
          "name": "zip"
        }
      ]
    },
    {
      "definitionName": "zipLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber",
          "name": "zipLeft"
        }
      ]
    },
    {
      "definitionName": "zipRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber",
          "name": "zipRight"
        }
      ]
    },
    {
      "definitionName": "zipWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber",
          "name": "zipWith"
        }
      ]
    },
    {
      "definitionName": "isRuntimeFiber",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber",
          "name": "isRuntimeFiber"
        }
      ]
    },
    {
      "definitionName": "id",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber",
          "name": "id"
        }
      ]
    },
    {
      "definitionName": "awaitAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "awaitAll"
        }
      ]
    },
    {
      "definitionName": "children",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber",
          "name": "children"
        }
      ]
    },
    {
      "definitionName": "done",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Exit",
          "name": "done"
        }
      ]
    },
    {
      "definitionName": "dump",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber.RuntimeFiber",
          "name": "dump"
        }
      ]
    },
    {
      "definitionName": "dumpAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "dumpAll"
        }
      ]
    },
    {
      "definitionName": "failCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "failCause"
        }
      ]
    },
    {
      "definitionName": "inheritAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber",
          "name": "inheritAll"
        }
      ]
    },
    {
      "definitionName": "interrupt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber",
          "name": "interrupt"
        }
      ]
    },
    {
      "definitionName": "interrupted",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Id",
          "name": "interrupted"
        }
      ]
    },
    {
      "definitionName": "interruptAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "interruptAll"
        }
      ]
    },
    {
      "definitionName": "interruptFork",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber",
          "name": "interruptFork"
        }
      ]
    },
    {
      "definitionName": "join",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber",
          "name": "join"
        }
      ]
    },
    {
      "definitionName": "joinAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "joinAll"
        }
      ]
    },
    {
      "definitionName": "poll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber",
          "name": "poll"
        }
      ]
    },
    {
      "definitionName": "pretty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber.RuntimeFiber",
          "name": "pretty"
        }
      ]
    },
    {
      "definitionName": "scoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber",
          "name": "scoped"
        }
      ]
    },
    {
      "definitionName": "status",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber.RuntimeFiber",
          "name": "status"
        }
      ]
    }
  ],
  "@effect/io/Cause": [
    {
      "definitionName": "CauseReducer",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.Reducer"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.Reducer"
        }
      ]
    },
    {
      "definitionName": "CauseRenderer",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.Renderer"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.Renderer"
        }
      ]
    },
    {
      "definitionName": "RuntimeException",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.RuntimeException"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.RuntimeException"
        }
      ]
    },
    {
      "definitionName": "InterruptedException",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.InterruptedException"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.InterruptedException"
        }
      ]
    },
    {
      "definitionName": "IllegalArgumentException",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.IllegalArgumentException"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.IllegalArgumentException"
        }
      ]
    },
    {
      "definitionName": "NoSuchElementException",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.NoSuchElementException"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.NoSuchElementException"
        }
      ]
    },
    {
      "definitionName": "InvalidHubCapacityException",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.InvalidHubCapacityException"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.InvalidHubCapacityException"
        }
      ]
    },
    {
      "definitionName": "Empty",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.Empty"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.Empty"
        }
      ]
    },
    {
      "definitionName": "Fail",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.Fail"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.Fail"
        }
      ]
    },
    {
      "definitionName": "Die",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.Die"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.Die"
        }
      ]
    },
    {
      "definitionName": "Interrupt",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.Interrupt"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.Interrupt"
        }
      ]
    },
    {
      "definitionName": "Annotated",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.Annotated"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.Annotated"
        }
      ]
    },
    {
      "definitionName": "Parallel",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.Parallel"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.Parallel"
        }
      ]
    },
    {
      "definitionName": "Sequential",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.Sequential"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.Sequential"
        }
      ]
    },
    {
      "definitionName": "CauseTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.TypeId"
        }
      ]
    },
    {
      "definitionName": "RuntimeExceptionTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.RuntimeExceptionTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.RuntimeExceptionTypeId"
        }
      ]
    },
    {
      "definitionName": "InterruptedExceptionTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.InterruptedExceptionTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.InterruptedExceptionTypeId"
        }
      ]
    },
    {
      "definitionName": "IllegalArgumentExceptionTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.IllegalArgumentExceptionTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.IllegalArgumentExceptionTypeId"
        }
      ]
    },
    {
      "definitionName": "NoSuchElementExceptionTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.NoSuchElementExceptionTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.NoSuchElementExceptionTypeId"
        }
      ]
    },
    {
      "definitionName": "InvalidHubCapacityExceptionTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.InvalidHubCapacityExceptionTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.InvalidHubCapacityExceptionTypeId"
        }
      ]
    },
    {
      "definitionName": "StackAnnotationTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.StackAnnotationTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.StackAnnotationTypeId"
        }
      ]
    },
    {
      "definitionName": "SpanAnnotationTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause.SpanAnnotationTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause.SpanAnnotationTypeId"
        }
      ]
    },
    {
      "definitionName": "Cause",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cause"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cause"
        }
      ]
    },
    {
      "definitionName": "stripSomeDefects",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Cause",
          "name": "stripSomeDefects"
        }
      ]
    },
    {
      "definitionName": "as",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Cause",
          "name": "as"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Cause",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "flatMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Cause",
          "name": "flatMap"
        }
      ]
    },
    {
      "definitionName": "contains",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Cause",
          "name": "contains"
        }
      ]
    },
    {
      "definitionName": "squashWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Cause",
          "name": "squashWith"
        }
      ]
    },
    {
      "definitionName": "find",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Cause",
          "name": "find"
        }
      ]
    },
    {
      "definitionName": "filter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Cause",
          "name": "filter"
        }
      ]
    },
    {
      "definitionName": "match",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Cause",
          "name": "match"
        }
      ]
    },
    {
      "definitionName": "reduce",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Cause",
          "name": "reduce"
        }
      ]
    },
    {
      "definitionName": "reduceWithContext",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Cause",
          "name": "reduceWithContext"
        }
      ]
    },
    {
      "definitionName": "pretty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Cause",
          "name": "pretty"
        }
      ]
    },
    {
      "definitionName": "annotated",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "annotated"
        }
      ]
    },
    {
      "definitionName": "parallel",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "parallel"
        }
      ]
    },
    {
      "definitionName": "sequential",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Cause",
          "name": "sequential"
        }
      ]
    },
    {
      "definitionName": "interrupt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Id",
          "name": "interrupt"
        }
      ]
    },
    {
      "definitionName": "isEmptyType",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "isEmptyType"
        }
      ]
    },
    {
      "definitionName": "isFailType",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "isFailType"
        }
      ]
    },
    {
      "definitionName": "isDieType",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "isDieType"
        }
      ]
    },
    {
      "definitionName": "isInterruptType",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "isInterruptType"
        }
      ]
    },
    {
      "definitionName": "isAnnotatedType",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "isAnnotatedType"
        }
      ]
    },
    {
      "definitionName": "isSequentialType",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "isSequentialType"
        }
      ]
    },
    {
      "definitionName": "isParallelType",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "isParallelType"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "size"
        }
      ]
    },
    {
      "definitionName": "isEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "isEmpty"
        }
      ]
    },
    {
      "definitionName": "isFailure",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "isFailure"
        }
      ]
    },
    {
      "definitionName": "isDie",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "isDie"
        }
      ]
    },
    {
      "definitionName": "isInterrupted",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "isInterrupted"
        }
      ]
    },
    {
      "definitionName": "isInterruptedOnly",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "isInterruptedOnly"
        }
      ]
    },
    {
      "definitionName": "failures",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "failures"
        }
      ]
    },
    {
      "definitionName": "defects",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "defects"
        }
      ]
    },
    {
      "definitionName": "interruptors",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "interruptors"
        }
      ]
    },
    {
      "definitionName": "failureOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "failureOption"
        }
      ]
    },
    {
      "definitionName": "failureOrCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "failureOrCause"
        }
      ]
    },
    {
      "definitionName": "flipCauseOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "flipCauseOption"
        }
      ]
    },
    {
      "definitionName": "dieOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "dieOption"
        }
      ]
    },
    {
      "definitionName": "interruptOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "interruptOption"
        }
      ]
    },
    {
      "definitionName": "keepDefects",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "keepDefects"
        }
      ]
    },
    {
      "definitionName": "linearize",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "linearize"
        }
      ]
    },
    {
      "definitionName": "stripFailures",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "stripFailures"
        }
      ]
    },
    {
      "definitionName": "flatten",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "flatten"
        }
      ]
    },
    {
      "definitionName": "squash",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "squash"
        }
      ]
    },
    {
      "definitionName": "unannotate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "unannotate"
        }
      ]
    }
  ],
  "@effect/io/Effect": [
    {
      "definitionName": "Effect",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Effect"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Effect"
        }
      ]
    },
    {
      "definitionName": "EffectGen",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Effect.Gen"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Effect.Gen"
        }
      ]
    },
    {
      "definitionName": "EffectTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Effect.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Effect.TypeId"
        }
      ]
    },
    {
      "definitionName": "absorbWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "absorbWith"
        }
      ]
    },
    {
      "definitionName": "as",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "as"
        }
      ]
    },
    {
      "definitionName": "cached",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "cached"
        }
      ]
    },
    {
      "definitionName": "cachedInvalidate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "cachedInvalidate"
        }
      ]
    },
    {
      "definitionName": "catchAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "catchAll"
        }
      ]
    },
    {
      "definitionName": "catchAllCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "catchAllCause"
        }
      ]
    },
    {
      "definitionName": "catchAllDefect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "catchAllDefect"
        }
      ]
    },
    {
      "definitionName": "catchSome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "catchSome"
        }
      ]
    },
    {
      "definitionName": "catchSomeCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "catchSomeCause"
        }
      ]
    },
    {
      "definitionName": "catchSomeDefect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "catchSomeDefect"
        }
      ]
    },
    {
      "definitionName": "catchTag",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "catchTag"
        }
      ]
    },
    {
      "definitionName": "withConfigProvider",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "withConfigProvider"
        }
      ]
    },
    {
      "definitionName": "collect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "collect"
        }
      ]
    },
    {
      "definitionName": "collectAllWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "collectAllWith"
        }
      ]
    },
    {
      "definitionName": "collectAllWithPar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "collectAllWithPar"
        }
      ]
    },
    {
      "definitionName": "collectAllWithEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "collectAllWithEffect"
        }
      ]
    },
    {
      "definitionName": "collectFirst",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "collectFirst"
        }
      ]
    },
    {
      "definitionName": "collectPar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "collectPar"
        }
      ]
    },
    {
      "definitionName": "collectWhile",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "collectWhile"
        }
      ]
    },
    {
      "definitionName": "continueOrFail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "continueOrFail"
        }
      ]
    },
    {
      "definitionName": "continueOrFailEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "continueOrFailEffect"
        }
      ]
    },
    {
      "definitionName": "delay",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "delay"
        }
      ]
    },
    {
      "definitionName": "bind",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "bind"
        }
      ]
    },
    {
      "definitionName": "bindValue",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "bindValue"
        }
      ]
    },
    {
      "definitionName": "dropUntil",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "dropUntil"
        }
      ]
    },
    {
      "definitionName": "dropWhile",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "dropWhile"
        }
      ]
    },
    {
      "definitionName": "ensuring",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "ensuring"
        }
      ]
    },
    {
      "definitionName": "ensuringChild",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "ensuringChild"
        }
      ]
    },
    {
      "definitionName": "ensuringChildren",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "ensuringChildren"
        }
      ]
    },
    {
      "definitionName": "exists",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "exists"
        }
      ]
    },
    {
      "definitionName": "existsPar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "existsPar"
        }
      ]
    },
    {
      "definitionName": "filter",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "filter"
        }
      ]
    },
    {
      "definitionName": "filterPar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "filterPar"
        }
      ]
    },
    {
      "definitionName": "filterNot",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "filterNot"
        }
      ]
    },
    {
      "definitionName": "filterNotPar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "filterNotPar"
        }
      ]
    },
    {
      "definitionName": "filterOrDie",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "filterOrDie"
        }
      ]
    },
    {
      "definitionName": "filterOrDieMessage",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "filterOrDieMessage"
        }
      ]
    },
    {
      "definitionName": "filterOrElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "filterOrElse"
        }
      ]
    },
    {
      "definitionName": "filterOrElseWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "filterOrElseWith"
        }
      ]
    },
    {
      "definitionName": "filterOrFail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "filterOrFail"
        }
      ]
    },
    {
      "definitionName": "find",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "find"
        }
      ]
    },
    {
      "definitionName": "flatMap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "flatMap"
        }
      ]
    },
    {
      "definitionName": "flattenErrorOption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "flattenErrorOption"
        }
      ]
    },
    {
      "definitionName": "flipWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "flipWith"
        }
      ]
    },
    {
      "definitionName": "fold",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "fold"
        }
      ]
    },
    {
      "definitionName": "foldCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "foldCause"
        }
      ]
    },
    {
      "definitionName": "foldCauseEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "foldCauseEffect"
        }
      ]
    },
    {
      "definitionName": "foldEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "foldEffect"
        }
      ]
    },
    {
      "definitionName": "forAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "forAll"
        }
      ]
    },
    {
      "definitionName": "forEachEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "forEachEffect"
        }
      ]
    },
    {
      "definitionName": "forEach",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "forEach"
        }
      ]
    },
    {
      "definitionName": "forEachDiscard",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "forEachDiscard"
        }
      ]
    },
    {
      "definitionName": "forEachExec",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "forEachExec"
        }
      ]
    },
    {
      "definitionName": "forEachWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "forEachWithIndex"
        }
      ]
    },
    {
      "definitionName": "forEachPar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "forEachPar"
        }
      ]
    },
    {
      "definitionName": "forEachParDiscard",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "forEachParDiscard"
        }
      ]
    },
    {
      "definitionName": "forEachParWithIndex",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "forEachParWithIndex"
        }
      ]
    },
    {
      "definitionName": "forkIn",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "forkIn"
        }
      ]
    },
    {
      "definitionName": "forkWithErrorHandler",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "forkWithErrorHandler"
        }
      ]
    },
    {
      "definitionName": "ifEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "ifEffect"
        }
      ]
    },
    {
      "definitionName": "intoDeferred",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "intoDeferred"
        }
      ]
    },
    {
      "definitionName": "leftWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "leftWith"
        }
      ]
    },
    {
      "definitionName": "logSpan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "logSpan"
        }
      ]
    },
    {
      "definitionName": "logAnnotate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "logAnnotate"
        }
      ]
    },
    {
      "definitionName": "map",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "map"
        }
      ]
    },
    {
      "definitionName": "mapBoth",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "mapBoth"
        }
      ]
    },
    {
      "definitionName": "mapError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "mapError"
        }
      ]
    },
    {
      "definitionName": "mapErrorCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "mapErrorCause"
        }
      ]
    },
    {
      "definitionName": "mapTryCatch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "mapTryCatch"
        }
      ]
    },
    {
      "definitionName": "mergeAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "mergeAll"
        }
      ]
    },
    {
      "definitionName": "mergeAllPar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "mergeAllPar"
        }
      ]
    },
    {
      "definitionName": "onDone",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "onDone"
        }
      ]
    },
    {
      "definitionName": "onDoneCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "onDoneCause"
        }
      ]
    },
    {
      "definitionName": "onError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "onError"
        }
      ]
    },
    {
      "definitionName": "onExit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "onExit"
        }
      ]
    },
    {
      "definitionName": "onInterrupt",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "onInterrupt"
        }
      ]
    },
    {
      "definitionName": "orDieWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "orDieWith"
        }
      ]
    },
    {
      "definitionName": "orElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "orElse"
        },
        {
          "typeName": "effect/io/Effect",
          "kind": "pipeable-operator",
          "name": "|"
        }
      ]
    },
    {
      "definitionName": "orElseEither",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "orElseEither"
        }
      ]
    },
    {
      "definitionName": "orElseOptional",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "orElseOptional"
        }
      ]
    },
    {
      "definitionName": "orElseSucceed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "orElseSucceed"
        }
      ]
    },
    {
      "definitionName": "orElseFail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "orElseFail"
        }
      ]
    },
    {
      "definitionName": "partition",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "partition"
        }
      ]
    },
    {
      "definitionName": "partitionPar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "partitionPar"
        }
      ]
    },
    {
      "definitionName": "provideEnvironment",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "provideEnvironment"
        }
      ]
    },
    {
      "definitionName": "provideLayer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "provideLayer"
        }
      ]
    },
    {
      "definitionName": "provideSomeEnvironment",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "provideSomeEnvironment"
        }
      ]
    },
    {
      "definitionName": "provideSomeLayer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "provideSomeLayer"
        }
      ]
    },
    {
      "definitionName": "race",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "race"
        }
      ]
    },
    {
      "definitionName": "raceAwait",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "raceAwait"
        }
      ]
    },
    {
      "definitionName": "raceEither",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "raceEither"
        }
      ]
    },
    {
      "definitionName": "raceFibersWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "raceFibersWith"
        }
      ]
    },
    {
      "definitionName": "raceFirst",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "raceFirst"
        }
      ]
    },
    {
      "definitionName": "raceWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "raceWith"
        }
      ]
    },
    {
      "definitionName": "reduce",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "reduce"
        }
      ]
    },
    {
      "definitionName": "reduceAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "reduceAll"
        }
      ]
    },
    {
      "definitionName": "reduceAllPar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "reduceAllPar"
        }
      ]
    },
    {
      "definitionName": "reduceRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "reduceRight"
        }
      ]
    },
    {
      "definitionName": "reduceWhile",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "reduceWhile"
        }
      ]
    },
    {
      "definitionName": "refineOrDie",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "refineOrDie"
        }
      ]
    },
    {
      "definitionName": "refineOrDieWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "refineOrDieWith"
        }
      ]
    },
    {
      "definitionName": "reject",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "reject"
        }
      ]
    },
    {
      "definitionName": "rejectEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "rejectEffect"
        }
      ]
    },
    {
      "definitionName": "repeat",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "repeat"
        }
      ]
    },
    {
      "definitionName": "repeatN",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "repeatN"
        }
      ]
    },
    {
      "definitionName": "repeatOrElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "repeatOrElse"
        }
      ]
    },
    {
      "definitionName": "repeatOrElseEither",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "repeatOrElseEither"
        }
      ]
    },
    {
      "definitionName": "repeatUntil",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "repeatUntil"
        }
      ]
    },
    {
      "definitionName": "repeatUntilEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "repeatUntilEffect"
        }
      ]
    },
    {
      "definitionName": "repeatUntilEquals",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "repeatUntilEquals"
        }
      ]
    },
    {
      "definitionName": "repeatWhile",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "repeatWhile"
        }
      ]
    },
    {
      "definitionName": "repeatWhileEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "repeatWhileEffect"
        }
      ]
    },
    {
      "definitionName": "repeatWhileEquals",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "repeatWhileEquals"
        }
      ]
    },
    {
      "definitionName": "retry",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "retry"
        }
      ]
    },
    {
      "definitionName": "retryN",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "retryN"
        }
      ]
    },
    {
      "definitionName": "retryOrElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "retryOrElse"
        }
      ]
    },
    {
      "definitionName": "retryOrElseEither",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "retryOrElseEither"
        }
      ]
    },
    {
      "definitionName": "retryUntil",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "retryUntil"
        }
      ]
    },
    {
      "definitionName": "retryUntilEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "retryUntilEffect"
        }
      ]
    },
    {
      "definitionName": "retryUntilEquals",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "retryUntilEquals"
        }
      ]
    },
    {
      "definitionName": "retryWhile",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "retryWhile"
        }
      ]
    },
    {
      "definitionName": "retryWhileEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "retryWhileEffect"
        }
      ]
    },
    {
      "definitionName": "retryWhileEquals",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "retryWhileEquals"
        }
      ]
    },
    {
      "definitionName": "replicate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "replicate"
        }
      ]
    },
    {
      "definitionName": "replicateEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "replicateEffect"
        }
      ]
    },
    {
      "definitionName": "replicateEffectDiscard",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "replicateEffectDiscard"
        }
      ]
    },
    {
      "definitionName": "rightWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "rightWith"
        }
      ]
    },
    {
      "definitionName": "schedule",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "schedule"
        }
      ]
    },
    {
      "definitionName": "scheduleForked",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "scheduleForked"
        }
      ]
    },
    {
      "definitionName": "scheduleFrom",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "scheduleFrom"
        }
      ]
    },
    {
      "definitionName": "someOrElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "someOrElse"
        }
      ]
    },
    {
      "definitionName": "someOrElseEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "someOrElseEffect"
        }
      ]
    },
    {
      "definitionName": "someOrFail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "someOrFail"
        }
      ]
    },
    {
      "definitionName": "someWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "someWith"
        }
      ]
    },
    {
      "definitionName": "summarized",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "summarized"
        }
      ]
    },
    {
      "definitionName": "supervised",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "supervised"
        }
      ]
    },
    {
      "definitionName": "takeWhile",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "takeWhile"
        }
      ]
    },
    {
      "definitionName": "tap",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "tap"
        }
      ]
    },
    {
      "definitionName": "tapBoth",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "tapBoth"
        }
      ]
    },
    {
      "definitionName": "tapDefect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "tapDefect"
        }
      ]
    },
    {
      "definitionName": "tapEither",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "tapEither"
        }
      ]
    },
    {
      "definitionName": "tapError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "tapError"
        }
      ]
    },
    {
      "definitionName": "tapErrorCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "tapErrorCause"
        }
      ]
    },
    {
      "definitionName": "tapSome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "tapSome"
        }
      ]
    },
    {
      "definitionName": "timedWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "timedWith"
        }
      ]
    },
    {
      "definitionName": "timeout",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "timeout"
        }
      ]
    },
    {
      "definitionName": "timeoutFail",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "timeoutFail"
        }
      ]
    },
    {
      "definitionName": "timeoutFailCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "timeoutFailCause"
        }
      ]
    },
    {
      "definitionName": "timeoutTo",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "timeoutTo"
        }
      ]
    },
    {
      "definitionName": "toLayer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "toLayer"
        }
      ]
    },
    {
      "definitionName": "traced",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "traced"
        }
      ]
    },
    {
      "definitionName": "tryOrElse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "tryOrElse"
        }
      ]
    },
    {
      "definitionName": "unless",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "unless"
        }
      ]
    },
    {
      "definitionName": "unlessEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "unlessEffect"
        }
      ]
    },
    {
      "definitionName": "unrefine",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "unrefine"
        }
      ]
    },
    {
      "definitionName": "unrefineWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "unrefineWith"
        }
      ]
    },
    {
      "definitionName": "using",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "using"
        }
      ]
    },
    {
      "definitionName": "validate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "validate"
        }
      ]
    },
    {
      "definitionName": "validatePar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "validatePar"
        }
      ]
    },
    {
      "definitionName": "validateAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "validateAll"
        }
      ]
    },
    {
      "definitionName": "validateAllPar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "validateAllPar"
        }
      ]
    },
    {
      "definitionName": "validateAllDiscard",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "validateAllDiscard"
        }
      ]
    },
    {
      "definitionName": "validateAllParDiscard",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "validateAllParDiscard"
        }
      ]
    },
    {
      "definitionName": "validateFirst",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "validateFirst"
        }
      ]
    },
    {
      "definitionName": "validateFirstPar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "Iterable",
          "name": "validateFirstPar"
        }
      ]
    },
    {
      "definitionName": "validateWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "validateWith"
        }
      ]
    },
    {
      "definitionName": "validateWithPar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "validateWithPar"
        }
      ]
    },
    {
      "definitionName": "when",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "when"
        }
      ]
    },
    {
      "definitionName": "whenCaseEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "whenCaseEffect"
        }
      ]
    },
    {
      "definitionName": "whenEffect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "whenEffect"
        }
      ]
    },
    {
      "definitionName": "withClock",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "withClock"
        }
      ]
    },
    {
      "definitionName": "withMetric",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "withMetric"
        }
      ]
    },
    {
      "definitionName": "withParallelism",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "withParallelism"
        }
      ]
    },
    {
      "definitionName": "withRuntimeFlags",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "withRuntimeFlags"
        }
      ]
    },
    {
      "definitionName": "withSpan",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "withSpan"
        }
      ]
    },
    {
      "definitionName": "zip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "zip"
        },
        {
          "typeName": "effect/io/Effect",
          "kind": "pipeable-operator",
          "name": "+"
        }
      ]
    },
    {
      "definitionName": "zipLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "zipLeft"
        },
        {
          "typeName": "effect/io/Effect",
          "kind": "pipeable-operator",
          "name": "<"
        }
      ]
    },
    {
      "definitionName": "zipRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "zipRight"
        },
        {
          "typeName": "effect/io/Effect",
          "kind": "pipeable-operator",
          "name": ">"
        }
      ]
    },
    {
      "definitionName": "zipWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "zipWith"
        }
      ]
    },
    {
      "definitionName": "zipPar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "zipPar"
        },
        {
          "typeName": "effect/io/Effect",
          "kind": "pipeable-operator",
          "name": "&"
        }
      ]
    },
    {
      "definitionName": "zipParLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "zipParLeft"
        }
      ]
    },
    {
      "definitionName": "zipParRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "zipParRight"
        }
      ]
    },
    {
      "definitionName": "zipWithPar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Effect",
          "name": "zipWithPar"
        }
      ]
    },
    {
      "definitionName": "acquireRelease",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "acquireRelease"
        }
      ]
    },
    {
      "definitionName": "acquireReleaseInterruptible",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "acquireReleaseInterruptible"
        }
      ]
    },
    {
      "definitionName": "acquireUseRelease",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "acquireUseRelease"
        }
      ]
    },
    {
      "definitionName": "unsafeRunAsyncWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "unsafeRunAsyncWith"
        }
      ]
    },
    {
      "definitionName": "unsafeRunWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "unsafeRunWith"
        }
      ]
    },
    {
      "definitionName": "absolve",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "absolve"
        }
      ]
    },
    {
      "definitionName": "absorb",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "absorb"
        }
      ]
    },
    {
      "definitionName": "asLeft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "asLeft"
        }
      ]
    },
    {
      "definitionName": "asLeftError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "asLeftError"
        }
      ]
    },
    {
      "definitionName": "asRight",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "asRight"
        }
      ]
    },
    {
      "definitionName": "asRightError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "asRightError"
        }
      ]
    },
    {
      "definitionName": "asSome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "asSome"
        }
      ]
    },
    {
      "definitionName": "asSomeError",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "asSomeError"
        }
      ]
    },
    {
      "definitionName": "asUnit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "asUnit"
        }
      ]
    },
    {
      "definitionName": "awaitAllChildren",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "awaitAllChildren"
        }
      ]
    },
    {
      "definitionName": "cause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "cause"
        }
      ]
    },
    {
      "definitionName": "config",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Config",
          "name": "config"
        }
      ]
    },
    {
      "definitionName": "withConfigProviderScoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Config/Provider",
          "name": "withConfigProviderScoped"
        }
      ]
    },
    {
      "definitionName": "collectAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "collectAll"
        }
      ]
    },
    {
      "definitionName": "collectAllDiscard",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "collectAllDiscard"
        }
      ]
    },
    {
      "definitionName": "collectAllPar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "collectAllPar"
        }
      ]
    },
    {
      "definitionName": "collectAllParDiscard",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "collectAllParDiscard"
        }
      ]
    },
    {
      "definitionName": "collectAllSuccesses",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "collectAllSuccesses"
        }
      ]
    },
    {
      "definitionName": "collectAllSuccessesPar",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "collectAllSuccessesPar"
        }
      ]
    },
    {
      "definitionName": "daemonChildren",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "daemonChildren"
        }
      ]
    },
    {
      "definitionName": "disconnect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "disconnect"
        }
      ]
    },
    {
      "definitionName": "diffFiberRefs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "diffFiberRefs"
        }
      ]
    },
    {
      "definitionName": "done",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Exit",
          "name": "done"
        }
      ]
    },
    {
      "definitionName": "either",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "either"
        }
      ]
    },
    {
      "definitionName": "eventually",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "eventually"
        }
      ]
    },
    {
      "definitionName": "exit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "exit"
        }
      ]
    },
    {
      "definitionName": "failCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "failCause"
        }
      ]
    },
    {
      "definitionName": "firstSuccessOf",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "firstSuccessOf"
        }
      ]
    },
    {
      "definitionName": "flatten",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "flatten"
        }
      ]
    },
    {
      "definitionName": "flip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "flip"
        }
      ]
    },
    {
      "definitionName": "forever",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "forever"
        }
      ]
    },
    {
      "definitionName": "fork",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "fork"
        }
      ]
    },
    {
      "definitionName": "forkDaemon",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "forkDaemon"
        }
      ]
    },
    {
      "definitionName": "forkAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "forkAll"
        }
      ]
    },
    {
      "definitionName": "forkAllDiscard",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "forkAllDiscard"
        }
      ]
    },
    {
      "definitionName": "forkScoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "forkScoped"
        }
      ]
    },
    {
      "definitionName": "head",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "head"
        }
      ]
    },
    {
      "definitionName": "ignore",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "ignore"
        }
      ]
    },
    {
      "definitionName": "ignoreLogged",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "ignoreLogged"
        }
      ]
    },
    {
      "definitionName": "inheritFiberRefs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberRefs",
          "name": "inheritFiberRefs"
        }
      ]
    },
    {
      "definitionName": "interruptWith",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Id",
          "name": "interruptWith"
        }
      ]
    },
    {
      "definitionName": "interruptible",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "interruptible"
        }
      ]
    },
    {
      "definitionName": "isFailure",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "isFailure"
        }
      ]
    },
    {
      "definitionName": "isSuccess",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "isSuccess"
        }
      ]
    },
    {
      "definitionName": "left",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "left"
        }
      ]
    },
    {
      "definitionName": "logDebugCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "logDebugCause"
        }
      ]
    },
    {
      "definitionName": "logErrorCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "logErrorCause"
        }
      ]
    },
    {
      "definitionName": "logFatalCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "logFatalCause"
        }
      ]
    },
    {
      "definitionName": "logInfoCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "logInfoCause"
        }
      ]
    },
    {
      "definitionName": "logWarningCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "logWarningCause"
        }
      ]
    },
    {
      "definitionName": "logTraceCause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cause",
          "name": "logTraceCause"
        }
      ]
    },
    {
      "definitionName": "memoize",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "memoize"
        }
      ]
    },
    {
      "definitionName": "merge",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "merge"
        }
      ]
    },
    {
      "definitionName": "negate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "negate"
        }
      ]
    },
    {
      "definitionName": "none",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "none"
        }
      ]
    },
    {
      "definitionName": "once",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "once"
        }
      ]
    },
    {
      "definitionName": "option",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "option"
        }
      ]
    },
    {
      "definitionName": "orDie",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "orDie"
        }
      ]
    },
    {
      "definitionName": "orDieKeep",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "orDieKeep"
        }
      ]
    },
    {
      "definitionName": "parallelErrors",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "parallelErrors"
        }
      ]
    },
    {
      "definitionName": "parallelFinalizers",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "parallelFinalizers"
        }
      ]
    },
    {
      "definitionName": "patchFiberRefs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberRefs/Patch",
          "name": "patchFiberRefs"
        }
      ]
    },
    {
      "definitionName": "raceAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "Iterable",
          "name": "raceAll"
        }
      ]
    },
    {
      "definitionName": "resurrect",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "resurrect"
        }
      ]
    },
    {
      "definitionName": "right",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "right"
        }
      ]
    },
    {
      "definitionName": "sandbox",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "sandbox"
        }
      ]
    },
    {
      "definitionName": "scoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "scoped"
        }
      ]
    },
    {
      "definitionName": "sequentialFinalizers",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "sequentialFinalizers"
        }
      ]
    },
    {
      "definitionName": "setFiberRefs",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/FiberRefs",
          "name": "setFiberRefs"
        }
      ]
    },
    {
      "definitionName": "some",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "some"
        }
      ]
    },
    {
      "definitionName": "someOrFailException",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "someOrFailException"
        }
      ]
    },
    {
      "definitionName": "timed",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "timed"
        }
      ]
    },
    {
      "definitionName": "uncause",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "uncause"
        }
      ]
    },
    {
      "definitionName": "uninterruptible",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "uninterruptible"
        }
      ]
    },
    {
      "definitionName": "unleft",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "unleft"
        }
      ]
    },
    {
      "definitionName": "unright",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "unright"
        }
      ]
    },
    {
      "definitionName": "unsafeRunAsync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "unsafeRunAsync"
        }
      ]
    },
    {
      "definitionName": "unsafeFork",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "unsafeFork"
        }
      ]
    },
    {
      "definitionName": "unsafeRunPromise",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "unsafeRunPromise"
        }
      ]
    },
    {
      "definitionName": "unsafeRunPromiseExit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "unsafeRunPromiseExit"
        }
      ]
    },
    {
      "definitionName": "unsafeRunSync",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "unsafeRunSync"
        }
      ]
    },
    {
      "definitionName": "unsafeRunSyncExit",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "unsafeRunSyncExit"
        }
      ]
    },
    {
      "definitionName": "unsandbox",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "unsandbox"
        }
      ]
    },
    {
      "definitionName": "unsome",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "unsome"
        }
      ]
    },
    {
      "definitionName": "updateRuntimeFlags",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Runtime/Flags/Patch",
          "name": "updateRuntimeFlags"
        }
      ]
    },
    {
      "definitionName": "withEarlyRelease",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "withEarlyRelease"
        }
      ]
    },
    {
      "definitionName": "withParallelismUnbounded",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "withParallelismUnbounded"
        }
      ]
    },
    {
      "definitionName": "withRuntimeFlagsScoped",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Runtime/Flags/Patch",
          "name": "withRuntimeFlagsScoped"
        }
      ]
    },
    {
      "definitionName": "blocking",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "blocking"
        }
      ]
    }
  ],
  "@effect/io/ScopedRef": [
    {
      "definitionName": "ScopedRef",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ScopedRef"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ScopedRef"
        }
      ]
    },
    {
      "definitionName": "ScopedRefTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/ScopedRef.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/ScopedRef.TypeId"
        }
      ]
    },
    {
      "definitionName": "set",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/ScopedRef",
          "name": "set"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/ScopedRef",
          "name": "get"
        }
      ]
    }
  ],
  "@effect/io/Cached": [
    {
      "definitionName": "Cached",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cached"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cached"
        }
      ]
    },
    {
      "definitionName": "CachedTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Cached.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Cached.TypeId"
        }
      ]
    },
    {
      "definitionName": "auto",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "fluent",
          "typeName": "effect/io/Effect",
          "name": "auto"
        }
      ]
    },
    {
      "definitionName": "get",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cached",
          "name": "get"
        }
      ]
    },
    {
      "definitionName": "manual",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Effect",
          "name": "manual"
        }
      ]
    },
    {
      "definitionName": "refresh",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Cached",
          "name": "refresh"
        }
      ]
    }
  ],
  "@effect/io/Queue": [
    {
      "definitionName": "Queue",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Queue"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Queue"
        }
      ]
    },
    {
      "definitionName": "Enqueue",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Queue.Enqueue"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Queue.Enqueue"
        }
      ]
    },
    {
      "definitionName": "Dequeue",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Queue.Dequeue"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Queue.Dequeue"
        }
      ]
    },
    {
      "definitionName": "BaseQueue",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Queue.BaseQueue"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Queue.BaseQueue"
        }
      ]
    },
    {
      "definitionName": "Strategy",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Queue.Strategy"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Queue.Strategy"
        }
      ]
    },
    {
      "definitionName": "EnqueueTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Queue.EnqueueTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Queue.EnqueueTypeId"
        }
      ]
    },
    {
      "definitionName": "DequeueTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Queue.DequeueTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Queue.DequeueTypeId"
        }
      ]
    },
    {
      "definitionName": "QueueStrategyTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Queue.StrategyTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Queue.StrategyTypeId"
        }
      ]
    },
    {
      "definitionName": "offer",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Queue.Enqueue",
          "name": "offer"
        },
        {
          "typeName": "effect/io/Queue.Enqueue",
          "kind": "pipeable-operator",
          "name": "<<"
        }
      ]
    },
    {
      "definitionName": "offerAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Queue.Enqueue",
          "name": "offerAll"
        },
        {
          "typeName": "effect/io/Queue.Enqueue",
          "kind": "pipeable-operator",
          "name": "+"
        }
      ]
    },
    {
      "definitionName": "takeUpTo",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Queue.Dequeue",
          "name": "takeUpTo"
        }
      ]
    },
    {
      "definitionName": "takeBetween",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Queue.Dequeue",
          "name": "takeBetween"
        }
      ]
    },
    {
      "definitionName": "takeN",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Queue.Dequeue",
          "name": "takeN"
        }
      ]
    },
    {
      "definitionName": "poll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Queue.Dequeue",
          "name": "poll"
        }
      ]
    },
    {
      "definitionName": "take",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Queue.Dequeue",
          "name": "take"
        }
      ]
    },
    {
      "definitionName": "takeAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Queue.Dequeue",
          "name": "takeAll"
        }
      ]
    }
  ],
  "@effect/io/Hub": [
    {
      "definitionName": "Hub",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Hub"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Hub"
        }
      ]
    },
    {
      "definitionName": "publish",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Hub",
          "name": "publish"
        }
      ]
    },
    {
      "definitionName": "publishAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Hub",
          "name": "publishAll"
        }
      ]
    },
    {
      "definitionName": "capacity",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Hub",
          "name": "capacity"
        }
      ]
    },
    {
      "definitionName": "size",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Hub",
          "name": "size"
        }
      ]
    },
    {
      "definitionName": "isFull",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Hub",
          "name": "isFull"
        }
      ]
    },
    {
      "definitionName": "isEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Hub",
          "name": "isEmpty"
        }
      ]
    },
    {
      "definitionName": "shutdown",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Hub",
          "name": "shutdown"
        }
      ]
    },
    {
      "definitionName": "isShutdown",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Hub",
          "name": "isShutdown"
        }
      ]
    },
    {
      "definitionName": "awaitShutdown",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Hub",
          "name": "awaitShutdown"
        }
      ]
    },
    {
      "definitionName": "subscribe",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Hub",
          "name": "subscribe"
        }
      ]
    }
  ],
  "@effect/io/Reloadable": [
    {
      "definitionName": "Reloadable",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Reloadable"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Reloadable"
        }
      ]
    },
    {
      "definitionName": "ReloadableTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Reloadable.TypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Reloadable.TypeId"
        }
      ]
    },
    {
      "definitionName": "manual",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Layer",
          "name": "manual"
        }
      ]
    }
  ],
  "@effect/io/Metric/Polling": [
    {
      "definitionName": "PollingMetric",
      "definitionKind": "interface",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/Polling.Metric"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/Polling.Metric"
        }
      ]
    },
    {
      "definitionName": "PollingMetricTypeId",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Metric/Polling.MetricTypeId"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Metric/Polling.MetricTypeId"
        }
      ]
    },
    {
      "definitionName": "launch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Metric/Polling.Metric",
          "name": "launch"
        }
      ]
    },
    {
      "definitionName": "retry",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Metric/Polling.Metric",
          "name": "retry"
        }
      ]
    },
    {
      "definitionName": "zip",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Metric/Polling.Metric",
          "name": "zip"
        }
      ]
    },
    {
      "definitionName": "poll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Metric/Polling.Metric",
          "name": "poll"
        }
      ]
    },
    {
      "definitionName": "pollAndUpdate",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Metric/Polling.Metric",
          "name": "pollAndUpdate"
        }
      ]
    }
  ],
  "@effect/io/Fiber/Runtime/Flags/Patch": [
    {
      "definitionName": "RuntimeFlagsPatch",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber/Runtime/Flags/Patch"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber/Runtime/Flags/Patch"
        }
      ]
    },
    {
      "definitionName": "isActive",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber/Runtime/Flags/Patch",
          "name": "isActive"
        }
      ]
    },
    {
      "definitionName": "isEnabled",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber/Runtime/Flags/Patch",
          "name": "isEnabled"
        }
      ]
    },
    {
      "definitionName": "isDisabled",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber/Runtime/Flags/Patch",
          "name": "isDisabled"
        }
      ]
    },
    {
      "definitionName": "includes",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber/Runtime/Flags/Patch",
          "name": "includes"
        }
      ]
    },
    {
      "definitionName": "andThen",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber/Runtime/Flags/Patch",
          "name": "andThen"
        }
      ]
    },
    {
      "definitionName": "both",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber/Runtime/Flags/Patch",
          "name": "both"
        }
      ]
    },
    {
      "definitionName": "either",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber/Runtime/Flags/Patch",
          "name": "either"
        }
      ]
    },
    {
      "definitionName": "exclude",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber/Runtime/Flags/Patch",
          "name": "exclude"
        }
      ]
    },
    {
      "definitionName": "enable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Runtime/Flags.RuntimeFlag",
          "name": "enable"
        }
      ]
    },
    {
      "definitionName": "disable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Runtime/Flags.RuntimeFlag",
          "name": "disable"
        }
      ]
    },
    {
      "definitionName": "isEmpty",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Runtime/Flags/Patch",
          "name": "isEmpty"
        }
      ]
    },
    {
      "definitionName": "inverse",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Runtime/Flags/Patch",
          "name": "inverse"
        }
      ]
    },
    {
      "definitionName": "enabledSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Runtime/Flags/Patch",
          "name": "enabledSet"
        }
      ]
    },
    {
      "definitionName": "disabledSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Runtime/Flags/Patch",
          "name": "disabledSet"
        }
      ]
    },
    {
      "definitionName": "render",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Runtime/Flags/Patch",
          "name": "render"
        }
      ]
    }
  ],
  "@effect/io/DefaultServices": [
    {
      "definitionName": "DefaultServices",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/DefaultServices"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/DefaultServices"
        }
      ]
    }
  ],
  "@effect/io/Fiber/Runtime/Flags": [
    {
      "definitionName": "RuntimeFlags",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber/Runtime/Flags"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber/Runtime/Flags"
        }
      ]
    },
    {
      "definitionName": "RuntimeFlag",
      "definitionKind": "type",
      "extensions": [
        {
          "kind": "type",
          "typeName": "effect/io/Fiber/Runtime/Flags.RuntimeFlag"
        },
        {
          "kind": "companion",
          "typeName": "effect/io/Fiber/Runtime/Flags.RuntimeFlag"
        }
      ]
    },
    {
      "definitionName": "diff",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber/Runtime/Flags",
          "name": "diff"
        }
      ]
    },
    {
      "definitionName": "disable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber/Runtime/Flags",
          "name": "disable"
        }
      ]
    },
    {
      "definitionName": "disableAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber/Runtime/Flags",
          "name": "disableAll"
        }
      ]
    },
    {
      "definitionName": "enable",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber/Runtime/Flags",
          "name": "enable"
        }
      ]
    },
    {
      "definitionName": "enableAll",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber/Runtime/Flags",
          "name": "enableAll"
        }
      ]
    },
    {
      "definitionName": "isEnabled",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber/Runtime/Flags",
          "name": "isEnabled"
        }
      ]
    },
    {
      "definitionName": "isDisabled",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber/Runtime/Flags",
          "name": "isDisabled"
        }
      ]
    },
    {
      "definitionName": "patch",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "pipeable",
          "typeName": "effect/io/Fiber/Runtime/Flags",
          "name": "patch"
        }
      ]
    },
    {
      "definitionName": "cooperativeYielding",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Runtime/Flags",
          "name": "cooperativeYielding"
        }
      ]
    },
    {
      "definitionName": "interruptible",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Runtime/Flags",
          "name": "interruptible"
        }
      ]
    },
    {
      "definitionName": "interruption",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Runtime/Flags",
          "name": "interruption"
        }
      ]
    },
    {
      "definitionName": "opSupervision",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Runtime/Flags",
          "name": "opSupervision"
        }
      ]
    },
    {
      "definitionName": "render",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Runtime/Flags",
          "name": "render"
        }
      ]
    },
    {
      "definitionName": "runtimeMetrics",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Runtime/Flags",
          "name": "runtimeMetrics"
        }
      ]
    },
    {
      "definitionName": "toSet",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Runtime/Flags",
          "name": "toSet"
        }
      ]
    },
    {
      "definitionName": "windDown",
      "definitionKind": "const",
      "extensions": [
        {
          "kind": "getter",
          "typeName": "effect/io/Fiber/Runtime/Flags",
          "name": "windDown"
        }
      ]
    }
  ]
}